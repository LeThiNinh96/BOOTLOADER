
I2C_01_260623.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000149c  08000198  08000198  00010198  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000070  08001638  08001638  00011638  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080016a8  080016a8  000116b0  2**0
                  CONTENTS
  4 .ARM          00000000  080016a8  080016a8  000116b0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080016a8  080016b0  000116b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080016a8  080016a8  000116a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080016ac  080016ac  000116ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000116b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000000  080016b0  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000002c  080016b0  0002002c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000116b0  2**0
                  CONTENTS, READONLY
 12 .debug_info   000011e5  00000000  00000000  000116e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000047f  00000000  00000000  000128c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000138  00000000  00000000  00012d48  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000f0  00000000  00000000  00012e80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00014586  00000000  00000000  00012f70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002210  00000000  00000000  000274f6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000813ea  00000000  00000000  00029706  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000aaaf0  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000005fc  00000000  00000000  000aab40  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	0800161c 	.word	0x0800161c

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	0800161c 	.word	0x0800161c

080001d8 <__aeabi_drsub>:
 80001d8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80001dc:	e002      	b.n	80001e4 <__adddf3>
 80001de:	bf00      	nop

080001e0 <__aeabi_dsub>:
 80001e0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080001e4 <__adddf3>:
 80001e4:	b530      	push	{r4, r5, lr}
 80001e6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001ea:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001ee:	ea94 0f05 	teq	r4, r5
 80001f2:	bf08      	it	eq
 80001f4:	ea90 0f02 	teqeq	r0, r2
 80001f8:	bf1f      	itttt	ne
 80001fa:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001fe:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000202:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000206:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800020a:	f000 80e2 	beq.w	80003d2 <__adddf3+0x1ee>
 800020e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000212:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000216:	bfb8      	it	lt
 8000218:	426d      	neglt	r5, r5
 800021a:	dd0c      	ble.n	8000236 <__adddf3+0x52>
 800021c:	442c      	add	r4, r5
 800021e:	ea80 0202 	eor.w	r2, r0, r2
 8000222:	ea81 0303 	eor.w	r3, r1, r3
 8000226:	ea82 0000 	eor.w	r0, r2, r0
 800022a:	ea83 0101 	eor.w	r1, r3, r1
 800022e:	ea80 0202 	eor.w	r2, r0, r2
 8000232:	ea81 0303 	eor.w	r3, r1, r3
 8000236:	2d36      	cmp	r5, #54	; 0x36
 8000238:	bf88      	it	hi
 800023a:	bd30      	pophi	{r4, r5, pc}
 800023c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000240:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000244:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000248:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800024c:	d002      	beq.n	8000254 <__adddf3+0x70>
 800024e:	4240      	negs	r0, r0
 8000250:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000254:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000258:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800025c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000260:	d002      	beq.n	8000268 <__adddf3+0x84>
 8000262:	4252      	negs	r2, r2
 8000264:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000268:	ea94 0f05 	teq	r4, r5
 800026c:	f000 80a7 	beq.w	80003be <__adddf3+0x1da>
 8000270:	f1a4 0401 	sub.w	r4, r4, #1
 8000274:	f1d5 0e20 	rsbs	lr, r5, #32
 8000278:	db0d      	blt.n	8000296 <__adddf3+0xb2>
 800027a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800027e:	fa22 f205 	lsr.w	r2, r2, r5
 8000282:	1880      	adds	r0, r0, r2
 8000284:	f141 0100 	adc.w	r1, r1, #0
 8000288:	fa03 f20e 	lsl.w	r2, r3, lr
 800028c:	1880      	adds	r0, r0, r2
 800028e:	fa43 f305 	asr.w	r3, r3, r5
 8000292:	4159      	adcs	r1, r3
 8000294:	e00e      	b.n	80002b4 <__adddf3+0xd0>
 8000296:	f1a5 0520 	sub.w	r5, r5, #32
 800029a:	f10e 0e20 	add.w	lr, lr, #32
 800029e:	2a01      	cmp	r2, #1
 80002a0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002a4:	bf28      	it	cs
 80002a6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002aa:	fa43 f305 	asr.w	r3, r3, r5
 80002ae:	18c0      	adds	r0, r0, r3
 80002b0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002b4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80002b8:	d507      	bpl.n	80002ca <__adddf3+0xe6>
 80002ba:	f04f 0e00 	mov.w	lr, #0
 80002be:	f1dc 0c00 	rsbs	ip, ip, #0
 80002c2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002c6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002ca:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80002ce:	d31b      	bcc.n	8000308 <__adddf3+0x124>
 80002d0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80002d4:	d30c      	bcc.n	80002f0 <__adddf3+0x10c>
 80002d6:	0849      	lsrs	r1, r1, #1
 80002d8:	ea5f 0030 	movs.w	r0, r0, rrx
 80002dc:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002e0:	f104 0401 	add.w	r4, r4, #1
 80002e4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002e8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80002ec:	f080 809a 	bcs.w	8000424 <__adddf3+0x240>
 80002f0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80002f4:	bf08      	it	eq
 80002f6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002fa:	f150 0000 	adcs.w	r0, r0, #0
 80002fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000302:	ea41 0105 	orr.w	r1, r1, r5
 8000306:	bd30      	pop	{r4, r5, pc}
 8000308:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800030c:	4140      	adcs	r0, r0
 800030e:	eb41 0101 	adc.w	r1, r1, r1
 8000312:	3c01      	subs	r4, #1
 8000314:	bf28      	it	cs
 8000316:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800031a:	d2e9      	bcs.n	80002f0 <__adddf3+0x10c>
 800031c:	f091 0f00 	teq	r1, #0
 8000320:	bf04      	itt	eq
 8000322:	4601      	moveq	r1, r0
 8000324:	2000      	moveq	r0, #0
 8000326:	fab1 f381 	clz	r3, r1
 800032a:	bf08      	it	eq
 800032c:	3320      	addeq	r3, #32
 800032e:	f1a3 030b 	sub.w	r3, r3, #11
 8000332:	f1b3 0220 	subs.w	r2, r3, #32
 8000336:	da0c      	bge.n	8000352 <__adddf3+0x16e>
 8000338:	320c      	adds	r2, #12
 800033a:	dd08      	ble.n	800034e <__adddf3+0x16a>
 800033c:	f102 0c14 	add.w	ip, r2, #20
 8000340:	f1c2 020c 	rsb	r2, r2, #12
 8000344:	fa01 f00c 	lsl.w	r0, r1, ip
 8000348:	fa21 f102 	lsr.w	r1, r1, r2
 800034c:	e00c      	b.n	8000368 <__adddf3+0x184>
 800034e:	f102 0214 	add.w	r2, r2, #20
 8000352:	bfd8      	it	le
 8000354:	f1c2 0c20 	rsble	ip, r2, #32
 8000358:	fa01 f102 	lsl.w	r1, r1, r2
 800035c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000360:	bfdc      	itt	le
 8000362:	ea41 010c 	orrle.w	r1, r1, ip
 8000366:	4090      	lslle	r0, r2
 8000368:	1ae4      	subs	r4, r4, r3
 800036a:	bfa2      	ittt	ge
 800036c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000370:	4329      	orrge	r1, r5
 8000372:	bd30      	popge	{r4, r5, pc}
 8000374:	ea6f 0404 	mvn.w	r4, r4
 8000378:	3c1f      	subs	r4, #31
 800037a:	da1c      	bge.n	80003b6 <__adddf3+0x1d2>
 800037c:	340c      	adds	r4, #12
 800037e:	dc0e      	bgt.n	800039e <__adddf3+0x1ba>
 8000380:	f104 0414 	add.w	r4, r4, #20
 8000384:	f1c4 0220 	rsb	r2, r4, #32
 8000388:	fa20 f004 	lsr.w	r0, r0, r4
 800038c:	fa01 f302 	lsl.w	r3, r1, r2
 8000390:	ea40 0003 	orr.w	r0, r0, r3
 8000394:	fa21 f304 	lsr.w	r3, r1, r4
 8000398:	ea45 0103 	orr.w	r1, r5, r3
 800039c:	bd30      	pop	{r4, r5, pc}
 800039e:	f1c4 040c 	rsb	r4, r4, #12
 80003a2:	f1c4 0220 	rsb	r2, r4, #32
 80003a6:	fa20 f002 	lsr.w	r0, r0, r2
 80003aa:	fa01 f304 	lsl.w	r3, r1, r4
 80003ae:	ea40 0003 	orr.w	r0, r0, r3
 80003b2:	4629      	mov	r1, r5
 80003b4:	bd30      	pop	{r4, r5, pc}
 80003b6:	fa21 f004 	lsr.w	r0, r1, r4
 80003ba:	4629      	mov	r1, r5
 80003bc:	bd30      	pop	{r4, r5, pc}
 80003be:	f094 0f00 	teq	r4, #0
 80003c2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80003c6:	bf06      	itte	eq
 80003c8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80003cc:	3401      	addeq	r4, #1
 80003ce:	3d01      	subne	r5, #1
 80003d0:	e74e      	b.n	8000270 <__adddf3+0x8c>
 80003d2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003d6:	bf18      	it	ne
 80003d8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003dc:	d029      	beq.n	8000432 <__adddf3+0x24e>
 80003de:	ea94 0f05 	teq	r4, r5
 80003e2:	bf08      	it	eq
 80003e4:	ea90 0f02 	teqeq	r0, r2
 80003e8:	d005      	beq.n	80003f6 <__adddf3+0x212>
 80003ea:	ea54 0c00 	orrs.w	ip, r4, r0
 80003ee:	bf04      	itt	eq
 80003f0:	4619      	moveq	r1, r3
 80003f2:	4610      	moveq	r0, r2
 80003f4:	bd30      	pop	{r4, r5, pc}
 80003f6:	ea91 0f03 	teq	r1, r3
 80003fa:	bf1e      	ittt	ne
 80003fc:	2100      	movne	r1, #0
 80003fe:	2000      	movne	r0, #0
 8000400:	bd30      	popne	{r4, r5, pc}
 8000402:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000406:	d105      	bne.n	8000414 <__adddf3+0x230>
 8000408:	0040      	lsls	r0, r0, #1
 800040a:	4149      	adcs	r1, r1
 800040c:	bf28      	it	cs
 800040e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000412:	bd30      	pop	{r4, r5, pc}
 8000414:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000418:	bf3c      	itt	cc
 800041a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800041e:	bd30      	popcc	{r4, r5, pc}
 8000420:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000424:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000428:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800042c:	f04f 0000 	mov.w	r0, #0
 8000430:	bd30      	pop	{r4, r5, pc}
 8000432:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000436:	bf1a      	itte	ne
 8000438:	4619      	movne	r1, r3
 800043a:	4610      	movne	r0, r2
 800043c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000440:	bf1c      	itt	ne
 8000442:	460b      	movne	r3, r1
 8000444:	4602      	movne	r2, r0
 8000446:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800044a:	bf06      	itte	eq
 800044c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000450:	ea91 0f03 	teqeq	r1, r3
 8000454:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000458:	bd30      	pop	{r4, r5, pc}
 800045a:	bf00      	nop

0800045c <__aeabi_ui2d>:
 800045c:	f090 0f00 	teq	r0, #0
 8000460:	bf04      	itt	eq
 8000462:	2100      	moveq	r1, #0
 8000464:	4770      	bxeq	lr
 8000466:	b530      	push	{r4, r5, lr}
 8000468:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800046c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000470:	f04f 0500 	mov.w	r5, #0
 8000474:	f04f 0100 	mov.w	r1, #0
 8000478:	e750      	b.n	800031c <__adddf3+0x138>
 800047a:	bf00      	nop

0800047c <__aeabi_i2d>:
 800047c:	f090 0f00 	teq	r0, #0
 8000480:	bf04      	itt	eq
 8000482:	2100      	moveq	r1, #0
 8000484:	4770      	bxeq	lr
 8000486:	b530      	push	{r4, r5, lr}
 8000488:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800048c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000490:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000494:	bf48      	it	mi
 8000496:	4240      	negmi	r0, r0
 8000498:	f04f 0100 	mov.w	r1, #0
 800049c:	e73e      	b.n	800031c <__adddf3+0x138>
 800049e:	bf00      	nop

080004a0 <__aeabi_f2d>:
 80004a0:	0042      	lsls	r2, r0, #1
 80004a2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004a6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004aa:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004ae:	bf1f      	itttt	ne
 80004b0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004b4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80004b8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80004bc:	4770      	bxne	lr
 80004be:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80004c2:	bf08      	it	eq
 80004c4:	4770      	bxeq	lr
 80004c6:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80004ca:	bf04      	itt	eq
 80004cc:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80004d0:	4770      	bxeq	lr
 80004d2:	b530      	push	{r4, r5, lr}
 80004d4:	f44f 7460 	mov.w	r4, #896	; 0x380
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80004e0:	e71c      	b.n	800031c <__adddf3+0x138>
 80004e2:	bf00      	nop

080004e4 <__aeabi_ul2d>:
 80004e4:	ea50 0201 	orrs.w	r2, r0, r1
 80004e8:	bf08      	it	eq
 80004ea:	4770      	bxeq	lr
 80004ec:	b530      	push	{r4, r5, lr}
 80004ee:	f04f 0500 	mov.w	r5, #0
 80004f2:	e00a      	b.n	800050a <__aeabi_l2d+0x16>

080004f4 <__aeabi_l2d>:
 80004f4:	ea50 0201 	orrs.w	r2, r0, r1
 80004f8:	bf08      	it	eq
 80004fa:	4770      	bxeq	lr
 80004fc:	b530      	push	{r4, r5, lr}
 80004fe:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000502:	d502      	bpl.n	800050a <__aeabi_l2d+0x16>
 8000504:	4240      	negs	r0, r0
 8000506:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800050a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800050e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000512:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000516:	f43f aed8 	beq.w	80002ca <__adddf3+0xe6>
 800051a:	f04f 0203 	mov.w	r2, #3
 800051e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000522:	bf18      	it	ne
 8000524:	3203      	addne	r2, #3
 8000526:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800052a:	bf18      	it	ne
 800052c:	3203      	addne	r2, #3
 800052e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000532:	f1c2 0320 	rsb	r3, r2, #32
 8000536:	fa00 fc03 	lsl.w	ip, r0, r3
 800053a:	fa20 f002 	lsr.w	r0, r0, r2
 800053e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000542:	ea40 000e 	orr.w	r0, r0, lr
 8000546:	fa21 f102 	lsr.w	r1, r1, r2
 800054a:	4414      	add	r4, r2
 800054c:	e6bd      	b.n	80002ca <__adddf3+0xe6>
 800054e:	bf00      	nop

08000550 <__aeabi_dmul>:
 8000550:	b570      	push	{r4, r5, r6, lr}
 8000552:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000556:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800055a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800055e:	bf1d      	ittte	ne
 8000560:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000564:	ea94 0f0c 	teqne	r4, ip
 8000568:	ea95 0f0c 	teqne	r5, ip
 800056c:	f000 f8de 	bleq	800072c <__aeabi_dmul+0x1dc>
 8000570:	442c      	add	r4, r5
 8000572:	ea81 0603 	eor.w	r6, r1, r3
 8000576:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800057a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800057e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000582:	bf18      	it	ne
 8000584:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000588:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800058c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000590:	d038      	beq.n	8000604 <__aeabi_dmul+0xb4>
 8000592:	fba0 ce02 	umull	ip, lr, r0, r2
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800059e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005a2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005a6:	f04f 0600 	mov.w	r6, #0
 80005aa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005ae:	f09c 0f00 	teq	ip, #0
 80005b2:	bf18      	it	ne
 80005b4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80005bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80005c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80005c4:	d204      	bcs.n	80005d0 <__aeabi_dmul+0x80>
 80005c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005ca:	416d      	adcs	r5, r5
 80005cc:	eb46 0606 	adc.w	r6, r6, r6
 80005d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80005d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80005d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80005dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80005e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80005e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80005e8:	bf88      	it	hi
 80005ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80005ee:	d81e      	bhi.n	800062e <__aeabi_dmul+0xde>
 80005f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80005f4:	bf08      	it	eq
 80005f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005fa:	f150 0000 	adcs.w	r0, r0, #0
 80005fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000602:	bd70      	pop	{r4, r5, r6, pc}
 8000604:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000608:	ea46 0101 	orr.w	r1, r6, r1
 800060c:	ea40 0002 	orr.w	r0, r0, r2
 8000610:	ea81 0103 	eor.w	r1, r1, r3
 8000614:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000618:	bfc2      	ittt	gt
 800061a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800061e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000622:	bd70      	popgt	{r4, r5, r6, pc}
 8000624:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000628:	f04f 0e00 	mov.w	lr, #0
 800062c:	3c01      	subs	r4, #1
 800062e:	f300 80ab 	bgt.w	8000788 <__aeabi_dmul+0x238>
 8000632:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000636:	bfde      	ittt	le
 8000638:	2000      	movle	r0, #0
 800063a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800063e:	bd70      	pople	{r4, r5, r6, pc}
 8000640:	f1c4 0400 	rsb	r4, r4, #0
 8000644:	3c20      	subs	r4, #32
 8000646:	da35      	bge.n	80006b4 <__aeabi_dmul+0x164>
 8000648:	340c      	adds	r4, #12
 800064a:	dc1b      	bgt.n	8000684 <__aeabi_dmul+0x134>
 800064c:	f104 0414 	add.w	r4, r4, #20
 8000650:	f1c4 0520 	rsb	r5, r4, #32
 8000654:	fa00 f305 	lsl.w	r3, r0, r5
 8000658:	fa20 f004 	lsr.w	r0, r0, r4
 800065c:	fa01 f205 	lsl.w	r2, r1, r5
 8000660:	ea40 0002 	orr.w	r0, r0, r2
 8000664:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000668:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800066c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000670:	fa21 f604 	lsr.w	r6, r1, r4
 8000674:	eb42 0106 	adc.w	r1, r2, r6
 8000678:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800067c:	bf08      	it	eq
 800067e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000682:	bd70      	pop	{r4, r5, r6, pc}
 8000684:	f1c4 040c 	rsb	r4, r4, #12
 8000688:	f1c4 0520 	rsb	r5, r4, #32
 800068c:	fa00 f304 	lsl.w	r3, r0, r4
 8000690:	fa20 f005 	lsr.w	r0, r0, r5
 8000694:	fa01 f204 	lsl.w	r2, r1, r4
 8000698:	ea40 0002 	orr.w	r0, r0, r2
 800069c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006a4:	f141 0100 	adc.w	r1, r1, #0
 80006a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006ac:	bf08      	it	eq
 80006ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006b2:	bd70      	pop	{r4, r5, r6, pc}
 80006b4:	f1c4 0520 	rsb	r5, r4, #32
 80006b8:	fa00 f205 	lsl.w	r2, r0, r5
 80006bc:	ea4e 0e02 	orr.w	lr, lr, r2
 80006c0:	fa20 f304 	lsr.w	r3, r0, r4
 80006c4:	fa01 f205 	lsl.w	r2, r1, r5
 80006c8:	ea43 0302 	orr.w	r3, r3, r2
 80006cc:	fa21 f004 	lsr.w	r0, r1, r4
 80006d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d4:	fa21 f204 	lsr.w	r2, r1, r4
 80006d8:	ea20 0002 	bic.w	r0, r0, r2
 80006dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80006e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006e4:	bf08      	it	eq
 80006e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f094 0f00 	teq	r4, #0
 80006f0:	d10f      	bne.n	8000712 <__aeabi_dmul+0x1c2>
 80006f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80006f6:	0040      	lsls	r0, r0, #1
 80006f8:	eb41 0101 	adc.w	r1, r1, r1
 80006fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000700:	bf08      	it	eq
 8000702:	3c01      	subeq	r4, #1
 8000704:	d0f7      	beq.n	80006f6 <__aeabi_dmul+0x1a6>
 8000706:	ea41 0106 	orr.w	r1, r1, r6
 800070a:	f095 0f00 	teq	r5, #0
 800070e:	bf18      	it	ne
 8000710:	4770      	bxne	lr
 8000712:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000716:	0052      	lsls	r2, r2, #1
 8000718:	eb43 0303 	adc.w	r3, r3, r3
 800071c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000720:	bf08      	it	eq
 8000722:	3d01      	subeq	r5, #1
 8000724:	d0f7      	beq.n	8000716 <__aeabi_dmul+0x1c6>
 8000726:	ea43 0306 	orr.w	r3, r3, r6
 800072a:	4770      	bx	lr
 800072c:	ea94 0f0c 	teq	r4, ip
 8000730:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000734:	bf18      	it	ne
 8000736:	ea95 0f0c 	teqne	r5, ip
 800073a:	d00c      	beq.n	8000756 <__aeabi_dmul+0x206>
 800073c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000740:	bf18      	it	ne
 8000742:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000746:	d1d1      	bne.n	80006ec <__aeabi_dmul+0x19c>
 8000748:	ea81 0103 	eor.w	r1, r1, r3
 800074c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000750:	f04f 0000 	mov.w	r0, #0
 8000754:	bd70      	pop	{r4, r5, r6, pc}
 8000756:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800075a:	bf06      	itte	eq
 800075c:	4610      	moveq	r0, r2
 800075e:	4619      	moveq	r1, r3
 8000760:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000764:	d019      	beq.n	800079a <__aeabi_dmul+0x24a>
 8000766:	ea94 0f0c 	teq	r4, ip
 800076a:	d102      	bne.n	8000772 <__aeabi_dmul+0x222>
 800076c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000770:	d113      	bne.n	800079a <__aeabi_dmul+0x24a>
 8000772:	ea95 0f0c 	teq	r5, ip
 8000776:	d105      	bne.n	8000784 <__aeabi_dmul+0x234>
 8000778:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800077c:	bf1c      	itt	ne
 800077e:	4610      	movne	r0, r2
 8000780:	4619      	movne	r1, r3
 8000782:	d10a      	bne.n	800079a <__aeabi_dmul+0x24a>
 8000784:	ea81 0103 	eor.w	r1, r1, r3
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000790:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000794:	f04f 0000 	mov.w	r0, #0
 8000798:	bd70      	pop	{r4, r5, r6, pc}
 800079a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800079e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007a2:	bd70      	pop	{r4, r5, r6, pc}

080007a4 <__aeabi_ddiv>:
 80007a4:	b570      	push	{r4, r5, r6, lr}
 80007a6:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007aa:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007ae:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007b2:	bf1d      	ittte	ne
 80007b4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007b8:	ea94 0f0c 	teqne	r4, ip
 80007bc:	ea95 0f0c 	teqne	r5, ip
 80007c0:	f000 f8a7 	bleq	8000912 <__aeabi_ddiv+0x16e>
 80007c4:	eba4 0405 	sub.w	r4, r4, r5
 80007c8:	ea81 0e03 	eor.w	lr, r1, r3
 80007cc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80007d0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80007d4:	f000 8088 	beq.w	80008e8 <__aeabi_ddiv+0x144>
 80007d8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80007dc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80007e0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80007e4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007e8:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007ec:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007f0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007f4:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007f8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007fc:	429d      	cmp	r5, r3
 80007fe:	bf08      	it	eq
 8000800:	4296      	cmpeq	r6, r2
 8000802:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000806:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800080a:	d202      	bcs.n	8000812 <__aeabi_ddiv+0x6e>
 800080c:	085b      	lsrs	r3, r3, #1
 800080e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000812:	1ab6      	subs	r6, r6, r2
 8000814:	eb65 0503 	sbc.w	r5, r5, r3
 8000818:	085b      	lsrs	r3, r3, #1
 800081a:	ea4f 0232 	mov.w	r2, r2, rrx
 800081e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000822:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000826:	ebb6 0e02 	subs.w	lr, r6, r2
 800082a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800082e:	bf22      	ittt	cs
 8000830:	1ab6      	subcs	r6, r6, r2
 8000832:	4675      	movcs	r5, lr
 8000834:	ea40 000c 	orrcs.w	r0, r0, ip
 8000838:	085b      	lsrs	r3, r3, #1
 800083a:	ea4f 0232 	mov.w	r2, r2, rrx
 800083e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000842:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000846:	bf22      	ittt	cs
 8000848:	1ab6      	subcs	r6, r6, r2
 800084a:	4675      	movcs	r5, lr
 800084c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000850:	085b      	lsrs	r3, r3, #1
 8000852:	ea4f 0232 	mov.w	r2, r2, rrx
 8000856:	ebb6 0e02 	subs.w	lr, r6, r2
 800085a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800085e:	bf22      	ittt	cs
 8000860:	1ab6      	subcs	r6, r6, r2
 8000862:	4675      	movcs	r5, lr
 8000864:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	ea4f 0232 	mov.w	r2, r2, rrx
 800086e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000872:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000876:	bf22      	ittt	cs
 8000878:	1ab6      	subcs	r6, r6, r2
 800087a:	4675      	movcs	r5, lr
 800087c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000880:	ea55 0e06 	orrs.w	lr, r5, r6
 8000884:	d018      	beq.n	80008b8 <__aeabi_ddiv+0x114>
 8000886:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800088a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800088e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000892:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000896:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800089a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800089e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008a2:	d1c0      	bne.n	8000826 <__aeabi_ddiv+0x82>
 80008a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008a8:	d10b      	bne.n	80008c2 <__aeabi_ddiv+0x11e>
 80008aa:	ea41 0100 	orr.w	r1, r1, r0
 80008ae:	f04f 0000 	mov.w	r0, #0
 80008b2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80008b6:	e7b6      	b.n	8000826 <__aeabi_ddiv+0x82>
 80008b8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008bc:	bf04      	itt	eq
 80008be:	4301      	orreq	r1, r0
 80008c0:	2000      	moveq	r0, #0
 80008c2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80008c6:	bf88      	it	hi
 80008c8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80008cc:	f63f aeaf 	bhi.w	800062e <__aeabi_dmul+0xde>
 80008d0:	ebb5 0c03 	subs.w	ip, r5, r3
 80008d4:	bf04      	itt	eq
 80008d6:	ebb6 0c02 	subseq.w	ip, r6, r2
 80008da:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80008de:	f150 0000 	adcs.w	r0, r0, #0
 80008e2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80008e6:	bd70      	pop	{r4, r5, r6, pc}
 80008e8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80008ec:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008f0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008f4:	bfc2      	ittt	gt
 80008f6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008fa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008fe:	bd70      	popgt	{r4, r5, r6, pc}
 8000900:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000904:	f04f 0e00 	mov.w	lr, #0
 8000908:	3c01      	subs	r4, #1
 800090a:	e690      	b.n	800062e <__aeabi_dmul+0xde>
 800090c:	ea45 0e06 	orr.w	lr, r5, r6
 8000910:	e68d      	b.n	800062e <__aeabi_dmul+0xde>
 8000912:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000916:	ea94 0f0c 	teq	r4, ip
 800091a:	bf08      	it	eq
 800091c:	ea95 0f0c 	teqeq	r5, ip
 8000920:	f43f af3b 	beq.w	800079a <__aeabi_dmul+0x24a>
 8000924:	ea94 0f0c 	teq	r4, ip
 8000928:	d10a      	bne.n	8000940 <__aeabi_ddiv+0x19c>
 800092a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800092e:	f47f af34 	bne.w	800079a <__aeabi_dmul+0x24a>
 8000932:	ea95 0f0c 	teq	r5, ip
 8000936:	f47f af25 	bne.w	8000784 <__aeabi_dmul+0x234>
 800093a:	4610      	mov	r0, r2
 800093c:	4619      	mov	r1, r3
 800093e:	e72c      	b.n	800079a <__aeabi_dmul+0x24a>
 8000940:	ea95 0f0c 	teq	r5, ip
 8000944:	d106      	bne.n	8000954 <__aeabi_ddiv+0x1b0>
 8000946:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800094a:	f43f aefd 	beq.w	8000748 <__aeabi_dmul+0x1f8>
 800094e:	4610      	mov	r0, r2
 8000950:	4619      	mov	r1, r3
 8000952:	e722      	b.n	800079a <__aeabi_dmul+0x24a>
 8000954:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000958:	bf18      	it	ne
 800095a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800095e:	f47f aec5 	bne.w	80006ec <__aeabi_dmul+0x19c>
 8000962:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000966:	f47f af0d 	bne.w	8000784 <__aeabi_dmul+0x234>
 800096a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800096e:	f47f aeeb 	bne.w	8000748 <__aeabi_dmul+0x1f8>
 8000972:	e712      	b.n	800079a <__aeabi_dmul+0x24a>

08000974 <__gedf2>:
 8000974:	f04f 3cff 	mov.w	ip, #4294967295
 8000978:	e006      	b.n	8000988 <__cmpdf2+0x4>
 800097a:	bf00      	nop

0800097c <__ledf2>:
 800097c:	f04f 0c01 	mov.w	ip, #1
 8000980:	e002      	b.n	8000988 <__cmpdf2+0x4>
 8000982:	bf00      	nop

08000984 <__cmpdf2>:
 8000984:	f04f 0c01 	mov.w	ip, #1
 8000988:	f84d cd04 	str.w	ip, [sp, #-4]!
 800098c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000990:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000994:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000998:	bf18      	it	ne
 800099a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800099e:	d01b      	beq.n	80009d8 <__cmpdf2+0x54>
 80009a0:	b001      	add	sp, #4
 80009a2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009a6:	bf0c      	ite	eq
 80009a8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009ac:	ea91 0f03 	teqne	r1, r3
 80009b0:	bf02      	ittt	eq
 80009b2:	ea90 0f02 	teqeq	r0, r2
 80009b6:	2000      	moveq	r0, #0
 80009b8:	4770      	bxeq	lr
 80009ba:	f110 0f00 	cmn.w	r0, #0
 80009be:	ea91 0f03 	teq	r1, r3
 80009c2:	bf58      	it	pl
 80009c4:	4299      	cmppl	r1, r3
 80009c6:	bf08      	it	eq
 80009c8:	4290      	cmpeq	r0, r2
 80009ca:	bf2c      	ite	cs
 80009cc:	17d8      	asrcs	r0, r3, #31
 80009ce:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80009d2:	f040 0001 	orr.w	r0, r0, #1
 80009d6:	4770      	bx	lr
 80009d8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009dc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009e0:	d102      	bne.n	80009e8 <__cmpdf2+0x64>
 80009e2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80009e6:	d107      	bne.n	80009f8 <__cmpdf2+0x74>
 80009e8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009ec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009f0:	d1d6      	bne.n	80009a0 <__cmpdf2+0x1c>
 80009f2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009f6:	d0d3      	beq.n	80009a0 <__cmpdf2+0x1c>
 80009f8:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009fc:	4770      	bx	lr
 80009fe:	bf00      	nop

08000a00 <__aeabi_cdrcmple>:
 8000a00:	4684      	mov	ip, r0
 8000a02:	4610      	mov	r0, r2
 8000a04:	4662      	mov	r2, ip
 8000a06:	468c      	mov	ip, r1
 8000a08:	4619      	mov	r1, r3
 8000a0a:	4663      	mov	r3, ip
 8000a0c:	e000      	b.n	8000a10 <__aeabi_cdcmpeq>
 8000a0e:	bf00      	nop

08000a10 <__aeabi_cdcmpeq>:
 8000a10:	b501      	push	{r0, lr}
 8000a12:	f7ff ffb7 	bl	8000984 <__cmpdf2>
 8000a16:	2800      	cmp	r0, #0
 8000a18:	bf48      	it	mi
 8000a1a:	f110 0f00 	cmnmi.w	r0, #0
 8000a1e:	bd01      	pop	{r0, pc}

08000a20 <__aeabi_dcmpeq>:
 8000a20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a24:	f7ff fff4 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a28:	bf0c      	ite	eq
 8000a2a:	2001      	moveq	r0, #1
 8000a2c:	2000      	movne	r0, #0
 8000a2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a32:	bf00      	nop

08000a34 <__aeabi_dcmplt>:
 8000a34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a38:	f7ff ffea 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a3c:	bf34      	ite	cc
 8000a3e:	2001      	movcc	r0, #1
 8000a40:	2000      	movcs	r0, #0
 8000a42:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a46:	bf00      	nop

08000a48 <__aeabi_dcmple>:
 8000a48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a4c:	f7ff ffe0 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a50:	bf94      	ite	ls
 8000a52:	2001      	movls	r0, #1
 8000a54:	2000      	movhi	r0, #0
 8000a56:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a5a:	bf00      	nop

08000a5c <__aeabi_dcmpge>:
 8000a5c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a60:	f7ff ffce 	bl	8000a00 <__aeabi_cdrcmple>
 8000a64:	bf94      	ite	ls
 8000a66:	2001      	movls	r0, #1
 8000a68:	2000      	movhi	r0, #0
 8000a6a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a6e:	bf00      	nop

08000a70 <__aeabi_dcmpgt>:
 8000a70:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a74:	f7ff ffc4 	bl	8000a00 <__aeabi_cdrcmple>
 8000a78:	bf34      	ite	cc
 8000a7a:	2001      	movcc	r0, #1
 8000a7c:	2000      	movcs	r0, #0
 8000a7e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a82:	bf00      	nop

08000a84 <__aeabi_d2f>:
 8000a84:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a88:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000a8c:	bf24      	itt	cs
 8000a8e:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000a92:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000a96:	d90d      	bls.n	8000ab4 <__aeabi_d2f+0x30>
 8000a98:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000a9c:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000aa0:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000aa4:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000aa8:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000aac:	bf08      	it	eq
 8000aae:	f020 0001 	biceq.w	r0, r0, #1
 8000ab2:	4770      	bx	lr
 8000ab4:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000ab8:	d121      	bne.n	8000afe <__aeabi_d2f+0x7a>
 8000aba:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000abe:	bfbc      	itt	lt
 8000ac0:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000ac4:	4770      	bxlt	lr
 8000ac6:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000aca:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000ace:	f1c2 0218 	rsb	r2, r2, #24
 8000ad2:	f1c2 0c20 	rsb	ip, r2, #32
 8000ad6:	fa10 f30c 	lsls.w	r3, r0, ip
 8000ada:	fa20 f002 	lsr.w	r0, r0, r2
 8000ade:	bf18      	it	ne
 8000ae0:	f040 0001 	orrne.w	r0, r0, #1
 8000ae4:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ae8:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000aec:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000af0:	ea40 000c 	orr.w	r0, r0, ip
 8000af4:	fa23 f302 	lsr.w	r3, r3, r2
 8000af8:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000afc:	e7cc      	b.n	8000a98 <__aeabi_d2f+0x14>
 8000afe:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b02:	d107      	bne.n	8000b14 <__aeabi_d2f+0x90>
 8000b04:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b08:	bf1e      	ittt	ne
 8000b0a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b0e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b12:	4770      	bxne	lr
 8000b14:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b18:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b1c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b20:	4770      	bx	lr
 8000b22:	bf00      	nop

08000b24 <SysTick_Handler>:

uint32_t systick_cnt = 0;
volatile char rx_buffer[5852] = {0};
volatile char recv_data_done_flag = 0;
void SysTick_Handler()
{
 8000b24:	b480      	push	{r7}
 8000b26:	af00      	add	r7, sp, #0
	systick_cnt++;
 8000b28:	4b04      	ldr	r3, [pc, #16]	; (8000b3c <SysTick_Handler+0x18>)
 8000b2a:	681b      	ldr	r3, [r3, #0]
 8000b2c:	3301      	adds	r3, #1
 8000b2e:	4a03      	ldr	r2, [pc, #12]	; (8000b3c <SysTick_Handler+0x18>)
 8000b30:	6013      	str	r3, [r2, #0]
}
 8000b32:	bf00      	nop
 8000b34:	46bd      	mov	sp, r7
 8000b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b3a:	4770      	bx	lr
 8000b3c:	2000001c 	.word	0x2000001c

08000b40 <system_tick_init>:
void system_tick_init()
{
 8000b40:	b480      	push	{r7}
 8000b42:	b083      	sub	sp, #12
 8000b44:	af00      	add	r7, sp, #0
	uint32_t* CSR = (uint32_t* )0xe000e010;
 8000b46:	4b0a      	ldr	r3, [pc, #40]	; (8000b70 <system_tick_init+0x30>)
 8000b48:	607b      	str	r3, [r7, #4]
	uint32_t* RVR = (uint32_t* )0xe000e014;
 8000b4a:	4b0a      	ldr	r3, [pc, #40]	; (8000b74 <system_tick_init+0x34>)
 8000b4c:	603b      	str	r3, [r7, #0]
	*RVR = 15999;
 8000b4e:	683b      	ldr	r3, [r7, #0]
 8000b50:	f643 627f 	movw	r2, #15999	; 0x3e7f
 8000b54:	601a      	str	r2, [r3, #0]
	*CSR |= (1<<1)|(1<<0)|(1<<2);
 8000b56:	687b      	ldr	r3, [r7, #4]
 8000b58:	681b      	ldr	r3, [r3, #0]
 8000b5a:	f043 0207 	orr.w	r2, r3, #7
 8000b5e:	687b      	ldr	r3, [r7, #4]
 8000b60:	601a      	str	r2, [r3, #0]
}
 8000b62:	bf00      	nop
 8000b64:	370c      	adds	r7, #12
 8000b66:	46bd      	mov	sp, r7
 8000b68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b6c:	4770      	bx	lr
 8000b6e:	bf00      	nop
 8000b70:	e000e010 	.word	0xe000e010
 8000b74:	e000e014 	.word	0xe000e014

08000b78 <Custom_delay>:


void Custom_delay(uint32_t mSec)
{
 8000b78:	b480      	push	{r7}
 8000b7a:	b083      	sub	sp, #12
 8000b7c:	af00      	add	r7, sp, #0
 8000b7e:	6078      	str	r0, [r7, #4]
	systick_cnt = 0;
 8000b80:	4b07      	ldr	r3, [pc, #28]	; (8000ba0 <Custom_delay+0x28>)
 8000b82:	2200      	movs	r2, #0
 8000b84:	601a      	str	r2, [r3, #0]
	while(systick_cnt < mSec);
 8000b86:	bf00      	nop
 8000b88:	4b05      	ldr	r3, [pc, #20]	; (8000ba0 <Custom_delay+0x28>)
 8000b8a:	681b      	ldr	r3, [r3, #0]
 8000b8c:	687a      	ldr	r2, [r7, #4]
 8000b8e:	429a      	cmp	r2, r3
 8000b90:	d8fa      	bhi.n	8000b88 <Custom_delay+0x10>
}
 8000b92:	bf00      	nop
 8000b94:	bf00      	nop
 8000b96:	370c      	adds	r7, #12
 8000b98:	46bd      	mov	sp, r7
 8000b9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b9e:	4770      	bx	lr
 8000ba0:	2000001c 	.word	0x2000001c

08000ba4 <DMA2_Stream2_IRQHandler>:
	uint32_t* ISER1 = (uint32_t*)(0xE000e104);
	*ISER1 |= (1 << 26);
}

void DMA2_Stream2_IRQHandler()
{
 8000ba4:	b480      	push	{r7}
 8000ba6:	b083      	sub	sp, #12
 8000ba8:	af00      	add	r7, sp, #0
	uint32_t* DMA_LIFCR = (uint32_t*)(0x40026400 + 0x08);
 8000baa:	4b08      	ldr	r3, [pc, #32]	; (8000bcc <DMA2_Stream2_IRQHandler+0x28>)
 8000bac:	607b      	str	r3, [r7, #4]
	*DMA_LIFCR |= (1 << 21);
 8000bae:	687b      	ldr	r3, [r7, #4]
 8000bb0:	681b      	ldr	r3, [r3, #0]
 8000bb2:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 8000bb6:	687b      	ldr	r3, [r7, #4]
 8000bb8:	601a      	str	r2, [r3, #0]
	recv_data_done_flag = 1;
 8000bba:	4b05      	ldr	r3, [pc, #20]	; (8000bd0 <DMA2_Stream2_IRQHandler+0x2c>)
 8000bbc:	2201      	movs	r2, #1
 8000bbe:	701a      	strb	r2, [r3, #0]
}
 8000bc0:	bf00      	nop
 8000bc2:	370c      	adds	r7, #12
 8000bc4:	46bd      	mov	sp, r7
 8000bc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bca:	4770      	bx	lr
 8000bcc:	40026408 	.word	0x40026408
 8000bd0:	20000020 	.word	0x20000020

08000bd4 <main>:
#define OUTZ_L_M	0x6C
#define OUTZ_H_M	0x6D
uint16_t x_axis, y_axis, z_axis;
float heading;
int main()
{
 8000bd4:	b5b0      	push	{r4, r5, r7, lr}
 8000bd6:	b084      	sub	sp, #16
 8000bd8:	af00      	add	r7, sp, #0
	system_tick_init();
 8000bda:	f7ff ffb1 	bl	8000b40 <system_tick_init>
	I2C1_Init();
 8000bde:	f000 f905 	bl	8000dec <I2C1_Init>
	const uint8_t accel_addr = 0b0011001;
 8000be2:	2319      	movs	r3, #25
 8000be4:	73fb      	strb	r3, [r7, #15]
	const uint8_t magne_addr = 0b0011110;
 8000be6:	231e      	movs	r3, #30
 8000be8:	73bb      	strb	r3, [r7, #14]
	uint8_t accel_id = I2C1_Read(accel_addr, 0x0f);
 8000bea:	7bfb      	ldrb	r3, [r7, #15]
 8000bec:	210f      	movs	r1, #15
 8000bee:	4618      	mov	r0, r3
 8000bf0:	f000 f966 	bl	8000ec0 <I2C1_Read>
 8000bf4:	4603      	mov	r3, r0
 8000bf6:	737b      	strb	r3, [r7, #13]
	uint8_t magne_id = I2C1_Read(magne_addr, 0x4f);
 8000bf8:	7bbb      	ldrb	r3, [r7, #14]
 8000bfa:	214f      	movs	r1, #79	; 0x4f
 8000bfc:	4618      	mov	r0, r3
 8000bfe:	f000 f95f 	bl	8000ec0 <I2C1_Read>
 8000c02:	4603      	mov	r3, r0
 8000c04:	733b      	strb	r3, [r7, #12]
	I2C1_Write(magne_addr, 0x60, 0x00);
 8000c06:	7bbb      	ldrb	r3, [r7, #14]
 8000c08:	2200      	movs	r2, #0
 8000c0a:	2160      	movs	r1, #96	; 0x60
 8000c0c:	4618      	mov	r0, r3
 8000c0e:	f000 f9ef 	bl	8000ff0 <I2C1_Write>
	uint8_t x_l, x_h, y_l, y_h, z_l, z_h;
	const float Pi = 3.14159;
 8000c12:	4b40      	ldr	r3, [pc, #256]	; (8000d14 <main+0x140>)
 8000c14:	60bb      	str	r3, [r7, #8]

	while(1)
	{
		x_l = I2C1_Read(magne_addr, OUTX_L_M);
 8000c16:	7bbb      	ldrb	r3, [r7, #14]
 8000c18:	2168      	movs	r1, #104	; 0x68
 8000c1a:	4618      	mov	r0, r3
 8000c1c:	f000 f950 	bl	8000ec0 <I2C1_Read>
 8000c20:	4603      	mov	r3, r0
 8000c22:	71fb      	strb	r3, [r7, #7]
		x_h = I2C1_Read(magne_addr, OUTX_H_M);
 8000c24:	7bbb      	ldrb	r3, [r7, #14]
 8000c26:	2169      	movs	r1, #105	; 0x69
 8000c28:	4618      	mov	r0, r3
 8000c2a:	f000 f949 	bl	8000ec0 <I2C1_Read>
 8000c2e:	4603      	mov	r3, r0
 8000c30:	71bb      	strb	r3, [r7, #6]
		y_l = I2C1_Read(magne_addr, OUTY_L_M);
 8000c32:	7bbb      	ldrb	r3, [r7, #14]
 8000c34:	216a      	movs	r1, #106	; 0x6a
 8000c36:	4618      	mov	r0, r3
 8000c38:	f000 f942 	bl	8000ec0 <I2C1_Read>
 8000c3c:	4603      	mov	r3, r0
 8000c3e:	717b      	strb	r3, [r7, #5]
		y_h = I2C1_Read(magne_addr, OUTY_H_M);
 8000c40:	7bbb      	ldrb	r3, [r7, #14]
 8000c42:	216b      	movs	r1, #107	; 0x6b
 8000c44:	4618      	mov	r0, r3
 8000c46:	f000 f93b 	bl	8000ec0 <I2C1_Read>
 8000c4a:	4603      	mov	r3, r0
 8000c4c:	713b      	strb	r3, [r7, #4]
		z_l = I2C1_Read(magne_addr, OUTZ_L_M);
 8000c4e:	7bbb      	ldrb	r3, [r7, #14]
 8000c50:	216c      	movs	r1, #108	; 0x6c
 8000c52:	4618      	mov	r0, r3
 8000c54:	f000 f934 	bl	8000ec0 <I2C1_Read>
 8000c58:	4603      	mov	r3, r0
 8000c5a:	70fb      	strb	r3, [r7, #3]
		z_h = I2C1_Read(magne_addr, OUTZ_H_M);
 8000c5c:	7bbb      	ldrb	r3, [r7, #14]
 8000c5e:	216d      	movs	r1, #109	; 0x6d
 8000c60:	4618      	mov	r0, r3
 8000c62:	f000 f92d 	bl	8000ec0 <I2C1_Read>
 8000c66:	4603      	mov	r3, r0
 8000c68:	70bb      	strb	r3, [r7, #2]
		x_axis = (x_h << 8) | x_l;
 8000c6a:	79bb      	ldrb	r3, [r7, #6]
 8000c6c:	021b      	lsls	r3, r3, #8
 8000c6e:	b21a      	sxth	r2, r3
 8000c70:	79fb      	ldrb	r3, [r7, #7]
 8000c72:	b21b      	sxth	r3, r3
 8000c74:	4313      	orrs	r3, r2
 8000c76:	b21b      	sxth	r3, r3
 8000c78:	b29a      	uxth	r2, r3
 8000c7a:	4b27      	ldr	r3, [pc, #156]	; (8000d18 <main+0x144>)
 8000c7c:	801a      	strh	r2, [r3, #0]
		y_axis = (y_h << 8) | y_l;
 8000c7e:	793b      	ldrb	r3, [r7, #4]
 8000c80:	021b      	lsls	r3, r3, #8
 8000c82:	b21a      	sxth	r2, r3
 8000c84:	797b      	ldrb	r3, [r7, #5]
 8000c86:	b21b      	sxth	r3, r3
 8000c88:	4313      	orrs	r3, r2
 8000c8a:	b21b      	sxth	r3, r3
 8000c8c:	b29a      	uxth	r2, r3
 8000c8e:	4b23      	ldr	r3, [pc, #140]	; (8000d1c <main+0x148>)
 8000c90:	801a      	strh	r2, [r3, #0]
		z_axis = (z_h << 8) | z_l;
 8000c92:	78bb      	ldrb	r3, [r7, #2]
 8000c94:	021b      	lsls	r3, r3, #8
 8000c96:	b21a      	sxth	r2, r3
 8000c98:	78fb      	ldrb	r3, [r7, #3]
 8000c9a:	b21b      	sxth	r3, r3
 8000c9c:	4313      	orrs	r3, r2
 8000c9e:	b21b      	sxth	r3, r3
 8000ca0:	b29a      	uxth	r2, r3
 8000ca2:	4b1f      	ldr	r3, [pc, #124]	; (8000d20 <main+0x14c>)
 8000ca4:	801a      	strh	r2, [r3, #0]
		heading = (atan2(y_axis,x_axis) * 180) / Pi;
 8000ca6:	4b1d      	ldr	r3, [pc, #116]	; (8000d1c <main+0x148>)
 8000ca8:	881b      	ldrh	r3, [r3, #0]
 8000caa:	4618      	mov	r0, r3
 8000cac:	f7ff fbd6 	bl	800045c <__aeabi_ui2d>
 8000cb0:	4604      	mov	r4, r0
 8000cb2:	460d      	mov	r5, r1
 8000cb4:	4b18      	ldr	r3, [pc, #96]	; (8000d18 <main+0x144>)
 8000cb6:	881b      	ldrh	r3, [r3, #0]
 8000cb8:	4618      	mov	r0, r3
 8000cba:	f7ff fbcf 	bl	800045c <__aeabi_ui2d>
 8000cbe:	4602      	mov	r2, r0
 8000cc0:	460b      	mov	r3, r1
 8000cc2:	ec43 2b11 	vmov	d1, r2, r3
 8000cc6:	ec45 4b10 	vmov	d0, r4, r5
 8000cca:	f000 fa2d 	bl	8001128 <atan2>
 8000cce:	ec51 0b10 	vmov	r0, r1, d0
 8000cd2:	f04f 0200 	mov.w	r2, #0
 8000cd6:	4b13      	ldr	r3, [pc, #76]	; (8000d24 <main+0x150>)
 8000cd8:	f7ff fc3a 	bl	8000550 <__aeabi_dmul>
 8000cdc:	4602      	mov	r2, r0
 8000cde:	460b      	mov	r3, r1
 8000ce0:	4614      	mov	r4, r2
 8000ce2:	461d      	mov	r5, r3
 8000ce4:	68b8      	ldr	r0, [r7, #8]
 8000ce6:	f7ff fbdb 	bl	80004a0 <__aeabi_f2d>
 8000cea:	4602      	mov	r2, r0
 8000cec:	460b      	mov	r3, r1
 8000cee:	4620      	mov	r0, r4
 8000cf0:	4629      	mov	r1, r5
 8000cf2:	f7ff fd57 	bl	80007a4 <__aeabi_ddiv>
 8000cf6:	4602      	mov	r2, r0
 8000cf8:	460b      	mov	r3, r1
 8000cfa:	4610      	mov	r0, r2
 8000cfc:	4619      	mov	r1, r3
 8000cfe:	f7ff fec1 	bl	8000a84 <__aeabi_d2f>
 8000d02:	4603      	mov	r3, r0
 8000d04:	4a08      	ldr	r2, [pc, #32]	; (8000d28 <main+0x154>)
 8000d06:	6013      	str	r3, [r2, #0]


		Custom_delay(500);
 8000d08:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000d0c:	f7ff ff34 	bl	8000b78 <Custom_delay>
		x_l = I2C1_Read(magne_addr, OUTX_L_M);
 8000d10:	e781      	b.n	8000c16 <main+0x42>
 8000d12:	bf00      	nop
 8000d14:	40490fd0 	.word	0x40490fd0
 8000d18:	20000022 	.word	0x20000022
 8000d1c:	20000024 	.word	0x20000024
 8000d20:	20000026 	.word	0x20000026
 8000d24:	40668000 	.word	0x40668000
 8000d28:	20000028 	.word	0x20000028

08000d2c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000d2c:	b480      	push	{r7}
 8000d2e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000d30:	e7fe      	b.n	8000d30 <NMI_Handler+0x4>

08000d32 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000d32:	b480      	push	{r7}
 8000d34:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000d36:	e7fe      	b.n	8000d36 <HardFault_Handler+0x4>

08000d38 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000d38:	b480      	push	{r7}
 8000d3a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000d3c:	e7fe      	b.n	8000d3c <MemManage_Handler+0x4>

08000d3e <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000d3e:	b480      	push	{r7}
 8000d40:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000d42:	e7fe      	b.n	8000d42 <BusFault_Handler+0x4>

08000d44 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000d44:	b480      	push	{r7}
 8000d46:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000d48:	e7fe      	b.n	8000d48 <UsageFault_Handler+0x4>

08000d4a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000d4a:	b480      	push	{r7}
 8000d4c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000d4e:	bf00      	nop
 8000d50:	46bd      	mov	sp, r7
 8000d52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d56:	4770      	bx	lr

08000d58 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000d58:	b480      	push	{r7}
 8000d5a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000d5c:	bf00      	nop
 8000d5e:	46bd      	mov	sp, r7
 8000d60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d64:	4770      	bx	lr

08000d66 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000d66:	b480      	push	{r7}
 8000d68:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000d6a:	bf00      	nop
 8000d6c:	46bd      	mov	sp, r7
 8000d6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d72:	4770      	bx	lr

08000d74 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000d74:	b480      	push	{r7}
 8000d76:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000d78:	4b06      	ldr	r3, [pc, #24]	; (8000d94 <SystemInit+0x20>)
 8000d7a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000d7e:	4a05      	ldr	r2, [pc, #20]	; (8000d94 <SystemInit+0x20>)
 8000d80:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000d84:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000d88:	bf00      	nop
 8000d8a:	46bd      	mov	sp, r7
 8000d8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d90:	4770      	bx	lr
 8000d92:	bf00      	nop
 8000d94:	e000ed00 	.word	0xe000ed00

08000d98 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 8000d98:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000dd0 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000d9c:	480d      	ldr	r0, [pc, #52]	; (8000dd4 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8000d9e:	490e      	ldr	r1, [pc, #56]	; (8000dd8 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8000da0:	4a0e      	ldr	r2, [pc, #56]	; (8000ddc <LoopFillZerobss+0x1e>)
  movs r3, #0
 8000da2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000da4:	e002      	b.n	8000dac <LoopCopyDataInit>

08000da6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000da6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000da8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000daa:	3304      	adds	r3, #4

08000dac <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000dac:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000dae:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000db0:	d3f9      	bcc.n	8000da6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000db2:	4a0b      	ldr	r2, [pc, #44]	; (8000de0 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8000db4:	4c0b      	ldr	r4, [pc, #44]	; (8000de4 <LoopFillZerobss+0x26>)
  movs r3, #0
 8000db6:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000db8:	e001      	b.n	8000dbe <LoopFillZerobss>

08000dba <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000dba:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000dbc:	3204      	adds	r2, #4

08000dbe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000dbe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000dc0:	d3fb      	bcc.n	8000dba <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8000dc2:	f7ff ffd7 	bl	8000d74 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000dc6:	f000 f98b 	bl	80010e0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000dca:	f7ff ff03 	bl	8000bd4 <main>
  bx  lr    
 8000dce:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8000dd0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000dd4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000dd8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000ddc:	080016b0 	.word	0x080016b0
  ldr r2, =_sbss
 8000de0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000de4:	2000002c 	.word	0x2000002c

08000de8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000de8:	e7fe      	b.n	8000de8 <ADC_IRQHandler>
	...

08000dec <I2C1_Init>:
 *      Author: HP
 */
#include "main.h"

void I2C1_Init()
{
 8000dec:	b480      	push	{r7}
 8000dee:	b089      	sub	sp, #36	; 0x24
 8000df0:	af00      	add	r7, sp, #0
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8000df2:	2300      	movs	r3, #0
 8000df4:	607b      	str	r3, [r7, #4]
 8000df6:	4b2b      	ldr	r3, [pc, #172]	; (8000ea4 <I2C1_Init+0xb8>)
 8000df8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000dfa:	4a2a      	ldr	r2, [pc, #168]	; (8000ea4 <I2C1_Init+0xb8>)
 8000dfc:	f043 0302 	orr.w	r3, r3, #2
 8000e00:	6313      	str	r3, [r2, #48]	; 0x30
 8000e02:	4b28      	ldr	r3, [pc, #160]	; (8000ea4 <I2C1_Init+0xb8>)
 8000e04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e06:	f003 0302 	and.w	r3, r3, #2
 8000e0a:	607b      	str	r3, [r7, #4]
 8000e0c:	687b      	ldr	r3, [r7, #4]
	/*
		set PB6 as alternate function 4 (I2C1_SCL)
		PB9 as alternate function 4 (I2C1_SDA)
	*/
	uint32_t* GPIOB_MODER = (uint32_t*)(0x40020400 + 0x00);
 8000e0e:	4b26      	ldr	r3, [pc, #152]	; (8000ea8 <I2C1_Init+0xbc>)
 8000e10:	61fb      	str	r3, [r7, #28]
	*GPIOB_MODER |= (0b10 << 12) | (0b10 << 18);
 8000e12:	69fb      	ldr	r3, [r7, #28]
 8000e14:	681b      	ldr	r3, [r3, #0]
 8000e16:	f443 2202 	orr.w	r2, r3, #532480	; 0x82000
 8000e1a:	69fb      	ldr	r3, [r7, #28]
 8000e1c:	601a      	str	r2, [r3, #0]
	uint32_t* GPIOB_AFRL = (uint32_t*)(0x40020420);
 8000e1e:	4b23      	ldr	r3, [pc, #140]	; (8000eac <I2C1_Init+0xc0>)
 8000e20:	61bb      	str	r3, [r7, #24]
	*GPIOB_AFRL |= (0b0100 << 24);
 8000e22:	69bb      	ldr	r3, [r7, #24]
 8000e24:	681b      	ldr	r3, [r3, #0]
 8000e26:	f043 6280 	orr.w	r2, r3, #67108864	; 0x4000000
 8000e2a:	69bb      	ldr	r3, [r7, #24]
 8000e2c:	601a      	str	r2, [r3, #0]
	uint32_t* GPIOB_AFRH = (uint32_t*)(0x40020424);
 8000e2e:	4b20      	ldr	r3, [pc, #128]	; (8000eb0 <I2C1_Init+0xc4>)
 8000e30:	617b      	str	r3, [r7, #20]
	*GPIOB_AFRH |= (0b0100 << 4);
 8000e32:	697b      	ldr	r3, [r7, #20]
 8000e34:	681b      	ldr	r3, [r3, #0]
 8000e36:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8000e3a:	697b      	ldr	r3, [r7, #20]
 8000e3c:	601a      	str	r2, [r3, #0]

	//enable clock for I2C1
	__HAL_RCC_I2C1_CLK_ENABLE();
 8000e3e:	2300      	movs	r3, #0
 8000e40:	603b      	str	r3, [r7, #0]
 8000e42:	4b18      	ldr	r3, [pc, #96]	; (8000ea4 <I2C1_Init+0xb8>)
 8000e44:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000e46:	4a17      	ldr	r2, [pc, #92]	; (8000ea4 <I2C1_Init+0xb8>)
 8000e48:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000e4c:	6413      	str	r3, [r2, #64]	; 0x40
 8000e4e:	4b15      	ldr	r3, [pc, #84]	; (8000ea4 <I2C1_Init+0xb8>)
 8000e50:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000e52:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8000e56:	603b      	str	r3, [r7, #0]
 8000e58:	683b      	ldr	r3, [r7, #0]
	/*set STM32 in master mode
	 master mode is auto switch when generate Start bit
	 */

	//set f for SCL (clock)
	uint32_t* I2C1_CR1 = (uint32_t*)(0x40005400);
 8000e5a:	4b16      	ldr	r3, [pc, #88]	; (8000eb4 <I2C1_Init+0xc8>)
 8000e5c:	613b      	str	r3, [r7, #16]
	uint32_t* I2C1_CR2 = (uint32_t*)(0x40005404);
 8000e5e:	4b16      	ldr	r3, [pc, #88]	; (8000eb8 <I2C1_Init+0xcc>)
 8000e60:	60fb      	str	r3, [r7, #12]
	uint32_t* I2C1_CCR = (uint32_t*)(0x4000541c);
 8000e62:	4b16      	ldr	r3, [pc, #88]	; (8000ebc <I2C1_Init+0xd0>)
 8000e64:	60bb      	str	r3, [r7, #8]
	*I2C1_CR2 |= 16<<0;
 8000e66:	68fb      	ldr	r3, [r7, #12]
 8000e68:	681b      	ldr	r3, [r3, #0]
 8000e6a:	f043 0210 	orr.w	r2, r3, #16
 8000e6e:	68fb      	ldr	r3, [r7, #12]
 8000e70:	601a      	str	r2, [r3, #0]
	*I2C1_CCR |= 80<<0;
 8000e72:	68bb      	ldr	r3, [r7, #8]
 8000e74:	681b      	ldr	r3, [r3, #0]
 8000e76:	f043 0250 	orr.w	r2, r3, #80	; 0x50
 8000e7a:	68bb      	ldr	r3, [r7, #8]
 8000e7c:	601a      	str	r2, [r3, #0]

	//enable I2C1
	*I2C1_CR1 &= ~(0b1<<0);
 8000e7e:	693b      	ldr	r3, [r7, #16]
 8000e80:	681b      	ldr	r3, [r3, #0]
 8000e82:	f023 0201 	bic.w	r2, r3, #1
 8000e86:	693b      	ldr	r3, [r7, #16]
 8000e88:	601a      	str	r2, [r3, #0]
	*I2C1_CR1 |= (0b1<<0);
 8000e8a:	693b      	ldr	r3, [r7, #16]
 8000e8c:	681b      	ldr	r3, [r3, #0]
 8000e8e:	f043 0201 	orr.w	r2, r3, #1
 8000e92:	693b      	ldr	r3, [r7, #16]
 8000e94:	601a      	str	r2, [r3, #0]
}
 8000e96:	bf00      	nop
 8000e98:	3724      	adds	r7, #36	; 0x24
 8000e9a:	46bd      	mov	sp, r7
 8000e9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ea0:	4770      	bx	lr
 8000ea2:	bf00      	nop
 8000ea4:	40023800 	.word	0x40023800
 8000ea8:	40020400 	.word	0x40020400
 8000eac:	40020420 	.word	0x40020420
 8000eb0:	40020424 	.word	0x40020424
 8000eb4:	40005400 	.word	0x40005400
 8000eb8:	40005404 	.word	0x40005404
 8000ebc:	4000541c 	.word	0x4000541c

08000ec0 <I2C1_Read>:
uint8_t I2C1_Read(uint8_t sensor_addr, uint8_t reg_addr)
{
 8000ec0:	b480      	push	{r7}
 8000ec2:	b089      	sub	sp, #36	; 0x24
 8000ec4:	af00      	add	r7, sp, #0
 8000ec6:	4603      	mov	r3, r0
 8000ec8:	460a      	mov	r2, r1
 8000eca:	71fb      	strb	r3, [r7, #7]
 8000ecc:	4613      	mov	r3, r2
 8000ece:	71bb      	strb	r3, [r7, #6]
	uint32_t* I2C1_CR1 = (uint32_t*)(0x40005400);
 8000ed0:	4b43      	ldr	r3, [pc, #268]	; (8000fe0 <I2C1_Read+0x120>)
 8000ed2:	61fb      	str	r3, [r7, #28]
	uint32_t* I2C1_DR = (uint32_t*)(0x40005410);
 8000ed4:	4b43      	ldr	r3, [pc, #268]	; (8000fe4 <I2C1_Read+0x124>)
 8000ed6:	61bb      	str	r3, [r7, #24]
	uint32_t* I2C1_SR1 = (uint32_t*)(0x40005414);
 8000ed8:	4b43      	ldr	r3, [pc, #268]	; (8000fe8 <I2C1_Read+0x128>)
 8000eda:	617b      	str	r3, [r7, #20]
	uint32_t* I2C1_SR2 = (uint32_t*)(0x40005418);
 8000edc:	4b43      	ldr	r3, [pc, #268]	; (8000fec <I2C1_Read+0x12c>)
 8000ede:	613b      	str	r3, [r7, #16]

	while (((*I2C1_SR2 >> 1) & 1) == 1);   //check bit BUSY
 8000ee0:	bf00      	nop
 8000ee2:	693b      	ldr	r3, [r7, #16]
 8000ee4:	681b      	ldr	r3, [r3, #0]
 8000ee6:	085b      	lsrs	r3, r3, #1
 8000ee8:	f003 0301 	and.w	r3, r3, #1
 8000eec:	2b00      	cmp	r3, #0
 8000eee:	d1f8      	bne.n	8000ee2 <I2C1_Read+0x22>
	//generate start bit
	*I2C1_CR1 |= (1<<8);
 8000ef0:	69fb      	ldr	r3, [r7, #28]
 8000ef2:	681b      	ldr	r3, [r3, #0]
 8000ef4:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8000ef8:	69fb      	ldr	r3, [r7, #28]
 8000efa:	601a      	str	r2, [r3, #0]
	while (((*I2C1_SR1 >> 0) & 1) == 0);
 8000efc:	bf00      	nop
 8000efe:	697b      	ldr	r3, [r7, #20]
 8000f00:	681b      	ldr	r3, [r3, #0]
 8000f02:	f003 0301 	and.w	r3, r3, #1
 8000f06:	2b00      	cmp	r3, #0
 8000f08:	d0f9      	beq.n	8000efe <I2C1_Read+0x3e>
	//send 7 bit slave address + WRITE bit (0)
	*I2C1_DR = (sensor_addr << 1) | 0;
 8000f0a:	79fb      	ldrb	r3, [r7, #7]
 8000f0c:	005b      	lsls	r3, r3, #1
 8000f0e:	461a      	mov	r2, r3
 8000f10:	69bb      	ldr	r3, [r7, #24]
 8000f12:	601a      	str	r2, [r3, #0]
	while(((*I2C1_SR1 >> 1) & 1) == 0);
 8000f14:	bf00      	nop
 8000f16:	697b      	ldr	r3, [r7, #20]
 8000f18:	681b      	ldr	r3, [r3, #0]
 8000f1a:	085b      	lsrs	r3, r3, #1
 8000f1c:	f003 0301 	and.w	r3, r3, #1
 8000f20:	2b00      	cmp	r3, #0
 8000f22:	d0f8      	beq.n	8000f16 <I2C1_Read+0x56>
	uint32_t temp = *I2C1_SR2;
 8000f24:	693b      	ldr	r3, [r7, #16]
 8000f26:	681b      	ldr	r3, [r3, #0]
 8000f28:	60fb      	str	r3, [r7, #12]
	(void)temp;
	//check ACK
	while(((*I2C1_SR1 >> 10) & 1) == 1);
 8000f2a:	bf00      	nop
 8000f2c:	697b      	ldr	r3, [r7, #20]
 8000f2e:	681b      	ldr	r3, [r3, #0]
 8000f30:	0a9b      	lsrs	r3, r3, #10
 8000f32:	f003 0301 	and.w	r3, r3, #1
 8000f36:	2b00      	cmp	r3, #0
 8000f38:	d1f8      	bne.n	8000f2c <I2C1_Read+0x6c>
	//send data (what's data to read)
	*I2C1_DR = reg_addr;
 8000f3a:	79ba      	ldrb	r2, [r7, #6]
 8000f3c:	69bb      	ldr	r3, [r7, #24]
 8000f3e:	601a      	str	r2, [r3, #0]
	while(((*I2C1_SR1 >> 2) & 1) == 0);
 8000f40:	bf00      	nop
 8000f42:	697b      	ldr	r3, [r7, #20]
 8000f44:	681b      	ldr	r3, [r3, #0]
 8000f46:	089b      	lsrs	r3, r3, #2
 8000f48:	f003 0301 	and.w	r3, r3, #1
 8000f4c:	2b00      	cmp	r3, #0
 8000f4e:	d0f8      	beq.n	8000f42 <I2C1_Read+0x82>
	//check ACK
	while(((*I2C1_SR1 >> 10) & 1) == 1);
 8000f50:	bf00      	nop
 8000f52:	697b      	ldr	r3, [r7, #20]
 8000f54:	681b      	ldr	r3, [r3, #0]
 8000f56:	0a9b      	lsrs	r3, r3, #10
 8000f58:	f003 0301 	and.w	r3, r3, #1
 8000f5c:	2b00      	cmp	r3, #0
 8000f5e:	d1f8      	bne.n	8000f52 <I2C1_Read+0x92>
	//generate again start bit
	*I2C1_CR1 |= (1<<8);
 8000f60:	69fb      	ldr	r3, [r7, #28]
 8000f62:	681b      	ldr	r3, [r3, #0]
 8000f64:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8000f68:	69fb      	ldr	r3, [r7, #28]
 8000f6a:	601a      	str	r2, [r3, #0]
	while (((*I2C1_SR1 >> 0) & 1) == 0);
 8000f6c:	bf00      	nop
 8000f6e:	697b      	ldr	r3, [r7, #20]
 8000f70:	681b      	ldr	r3, [r3, #0]
 8000f72:	f003 0301 	and.w	r3, r3, #1
 8000f76:	2b00      	cmp	r3, #0
 8000f78:	d0f9      	beq.n	8000f6e <I2C1_Read+0xae>
	//send 7 bit slave address + READ bit (1)
	*I2C1_DR = (sensor_addr << 1) | 1;
 8000f7a:	79fb      	ldrb	r3, [r7, #7]
 8000f7c:	005b      	lsls	r3, r3, #1
 8000f7e:	f043 0301 	orr.w	r3, r3, #1
 8000f82:	461a      	mov	r2, r3
 8000f84:	69bb      	ldr	r3, [r7, #24]
 8000f86:	601a      	str	r2, [r3, #0]
	while (((*I2C1_SR1 >> 1) & 1) == 0);
 8000f88:	bf00      	nop
 8000f8a:	697b      	ldr	r3, [r7, #20]
 8000f8c:	681b      	ldr	r3, [r3, #0]
 8000f8e:	085b      	lsrs	r3, r3, #1
 8000f90:	f003 0301 	and.w	r3, r3, #1
 8000f94:	2b00      	cmp	r3, #0
 8000f96:	d0f8      	beq.n	8000f8a <I2C1_Read+0xca>
	temp = *I2C1_SR2;
 8000f98:	693b      	ldr	r3, [r7, #16]
 8000f9a:	681b      	ldr	r3, [r3, #0]
 8000f9c:	60fb      	str	r3, [r7, #12]
	//check ACK
	while(((*I2C1_SR1 >> 10) & 1) == 1);
 8000f9e:	bf00      	nop
 8000fa0:	697b      	ldr	r3, [r7, #20]
 8000fa2:	681b      	ldr	r3, [r3, #0]
 8000fa4:	0a9b      	lsrs	r3, r3, #10
 8000fa6:	f003 0301 	and.w	r3, r3, #1
 8000faa:	2b00      	cmp	r3, #0
 8000fac:	d1f8      	bne.n	8000fa0 <I2C1_Read+0xe0>
	//read data from Slave
	while(((*I2C1_SR1 >> 6) & 1) == 0);
 8000fae:	bf00      	nop
 8000fb0:	697b      	ldr	r3, [r7, #20]
 8000fb2:	681b      	ldr	r3, [r3, #0]
 8000fb4:	099b      	lsrs	r3, r3, #6
 8000fb6:	f003 0301 	and.w	r3, r3, #1
 8000fba:	2b00      	cmp	r3, #0
 8000fbc:	d0f8      	beq.n	8000fb0 <I2C1_Read+0xf0>
	uint8_t adta_recv = *I2C1_DR;
 8000fbe:	69bb      	ldr	r3, [r7, #24]
 8000fc0:	681b      	ldr	r3, [r3, #0]
 8000fc2:	72fb      	strb	r3, [r7, #11]
	//generate stop bit
	*I2C1_CR1 |= (1<<9);
 8000fc4:	69fb      	ldr	r3, [r7, #28]
 8000fc6:	681b      	ldr	r3, [r3, #0]
 8000fc8:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8000fcc:	69fb      	ldr	r3, [r7, #28]
 8000fce:	601a      	str	r2, [r3, #0]
	return adta_recv;
 8000fd0:	7afb      	ldrb	r3, [r7, #11]
}
 8000fd2:	4618      	mov	r0, r3
 8000fd4:	3724      	adds	r7, #36	; 0x24
 8000fd6:	46bd      	mov	sp, r7
 8000fd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fdc:	4770      	bx	lr
 8000fde:	bf00      	nop
 8000fe0:	40005400 	.word	0x40005400
 8000fe4:	40005410 	.word	0x40005410
 8000fe8:	40005414 	.word	0x40005414
 8000fec:	40005418 	.word	0x40005418

08000ff0 <I2C1_Write>:
void I2C1_Write(uint8_t sensor_addr, uint8_t reg_addr, uint8_t value)
{
 8000ff0:	b480      	push	{r7}
 8000ff2:	b089      	sub	sp, #36	; 0x24
 8000ff4:	af00      	add	r7, sp, #0
 8000ff6:	4603      	mov	r3, r0
 8000ff8:	71fb      	strb	r3, [r7, #7]
 8000ffa:	460b      	mov	r3, r1
 8000ffc:	71bb      	strb	r3, [r7, #6]
 8000ffe:	4613      	mov	r3, r2
 8001000:	717b      	strb	r3, [r7, #5]
	uint32_t* I2C1_CR1 = (uint32_t*)(0x40005400);
 8001002:	4b33      	ldr	r3, [pc, #204]	; (80010d0 <I2C1_Write+0xe0>)
 8001004:	61fb      	str	r3, [r7, #28]
	uint32_t* I2C1_DR = (uint32_t*)(0x40005410);
 8001006:	4b33      	ldr	r3, [pc, #204]	; (80010d4 <I2C1_Write+0xe4>)
 8001008:	61bb      	str	r3, [r7, #24]
	uint32_t* I2C1_SR1 = (uint32_t*)(0x40005414);
 800100a:	4b33      	ldr	r3, [pc, #204]	; (80010d8 <I2C1_Write+0xe8>)
 800100c:	617b      	str	r3, [r7, #20]
	uint32_t* I2C1_SR2 = (uint32_t*)(0x40005418);
 800100e:	4b33      	ldr	r3, [pc, #204]	; (80010dc <I2C1_Write+0xec>)
 8001010:	613b      	str	r3, [r7, #16]

	while (((*I2C1_SR2 >> 1) & 1) == 1);   //check bit BUSY
 8001012:	bf00      	nop
 8001014:	693b      	ldr	r3, [r7, #16]
 8001016:	681b      	ldr	r3, [r3, #0]
 8001018:	085b      	lsrs	r3, r3, #1
 800101a:	f003 0301 	and.w	r3, r3, #1
 800101e:	2b00      	cmp	r3, #0
 8001020:	d1f8      	bne.n	8001014 <I2C1_Write+0x24>
	//generate start bit
	*I2C1_CR1 |= (1<<8);
 8001022:	69fb      	ldr	r3, [r7, #28]
 8001024:	681b      	ldr	r3, [r3, #0]
 8001026:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800102a:	69fb      	ldr	r3, [r7, #28]
 800102c:	601a      	str	r2, [r3, #0]
	while (((*I2C1_SR1 >> 0) & 1) == 0);
 800102e:	bf00      	nop
 8001030:	697b      	ldr	r3, [r7, #20]
 8001032:	681b      	ldr	r3, [r3, #0]
 8001034:	f003 0301 	and.w	r3, r3, #1
 8001038:	2b00      	cmp	r3, #0
 800103a:	d0f9      	beq.n	8001030 <I2C1_Write+0x40>
	//send 7 bit slave address + WRITE bit (0)
	*I2C1_DR = (sensor_addr << 1) | 0;
 800103c:	79fb      	ldrb	r3, [r7, #7]
 800103e:	005b      	lsls	r3, r3, #1
 8001040:	461a      	mov	r2, r3
 8001042:	69bb      	ldr	r3, [r7, #24]
 8001044:	601a      	str	r2, [r3, #0]
	while(((*I2C1_SR1 >> 1) & 1) == 0);
 8001046:	bf00      	nop
 8001048:	697b      	ldr	r3, [r7, #20]
 800104a:	681b      	ldr	r3, [r3, #0]
 800104c:	085b      	lsrs	r3, r3, #1
 800104e:	f003 0301 	and.w	r3, r3, #1
 8001052:	2b00      	cmp	r3, #0
 8001054:	d0f8      	beq.n	8001048 <I2C1_Write+0x58>
	uint32_t temp = *I2C1_SR2;
 8001056:	693b      	ldr	r3, [r7, #16]
 8001058:	681b      	ldr	r3, [r3, #0]
 800105a:	60fb      	str	r3, [r7, #12]
	(void)temp;
	//check slave send ACK for master
	while(((*I2C1_SR1 >> 10) & 1) == 1);
 800105c:	bf00      	nop
 800105e:	697b      	ldr	r3, [r7, #20]
 8001060:	681b      	ldr	r3, [r3, #0]
 8001062:	0a9b      	lsrs	r3, r3, #10
 8001064:	f003 0301 	and.w	r3, r3, #1
 8001068:	2b00      	cmp	r3, #0
 800106a:	d1f8      	bne.n	800105e <I2C1_Write+0x6e>
	//send 8bit data (data type)
	*I2C1_DR = reg_addr;
 800106c:	79ba      	ldrb	r2, [r7, #6]
 800106e:	69bb      	ldr	r3, [r7, #24]
 8001070:	601a      	str	r2, [r3, #0]
	while (((*I2C1_SR1 >> 2) & 1) == 0);
 8001072:	bf00      	nop
 8001074:	697b      	ldr	r3, [r7, #20]
 8001076:	681b      	ldr	r3, [r3, #0]
 8001078:	089b      	lsrs	r3, r3, #2
 800107a:	f003 0301 	and.w	r3, r3, #1
 800107e:	2b00      	cmp	r3, #0
 8001080:	d0f8      	beq.n	8001074 <I2C1_Write+0x84>
	//check slave send ACK for master
	while(((*I2C1_SR1 >> 10) & 1) == 1);
 8001082:	bf00      	nop
 8001084:	697b      	ldr	r3, [r7, #20]
 8001086:	681b      	ldr	r3, [r3, #0]
 8001088:	0a9b      	lsrs	r3, r3, #10
 800108a:	f003 0301 	and.w	r3, r3, #1
 800108e:	2b00      	cmp	r3, #0
 8001090:	d1f8      	bne.n	8001084 <I2C1_Write+0x94>
	//send 8 bit data (write data)
	*I2C1_DR = value;
 8001092:	797a      	ldrb	r2, [r7, #5]
 8001094:	69bb      	ldr	r3, [r7, #24]
 8001096:	601a      	str	r2, [r3, #0]
	while(((*I2C1_SR1 >> 2) & 1) == 0);
 8001098:	bf00      	nop
 800109a:	697b      	ldr	r3, [r7, #20]
 800109c:	681b      	ldr	r3, [r3, #0]
 800109e:	089b      	lsrs	r3, r3, #2
 80010a0:	f003 0301 	and.w	r3, r3, #1
 80010a4:	2b00      	cmp	r3, #0
 80010a6:	d0f8      	beq.n	800109a <I2C1_Write+0xaa>
	//check slave send ACK for master
	while(((*I2C1_SR1 >> 10) & 1) == 1);
 80010a8:	bf00      	nop
 80010aa:	697b      	ldr	r3, [r7, #20]
 80010ac:	681b      	ldr	r3, [r3, #0]
 80010ae:	0a9b      	lsrs	r3, r3, #10
 80010b0:	f003 0301 	and.w	r3, r3, #1
 80010b4:	2b00      	cmp	r3, #0
 80010b6:	d1f8      	bne.n	80010aa <I2C1_Write+0xba>
	//generate stop bit
	*I2C1_CR1 |= (1<<9);
 80010b8:	69fb      	ldr	r3, [r7, #28]
 80010ba:	681b      	ldr	r3, [r3, #0]
 80010bc:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 80010c0:	69fb      	ldr	r3, [r7, #28]
 80010c2:	601a      	str	r2, [r3, #0]
}
 80010c4:	bf00      	nop
 80010c6:	3724      	adds	r7, #36	; 0x24
 80010c8:	46bd      	mov	sp, r7
 80010ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010ce:	4770      	bx	lr
 80010d0:	40005400 	.word	0x40005400
 80010d4:	40005410 	.word	0x40005410
 80010d8:	40005414 	.word	0x40005414
 80010dc:	40005418 	.word	0x40005418

080010e0 <__libc_init_array>:
 80010e0:	b570      	push	{r4, r5, r6, lr}
 80010e2:	4d0d      	ldr	r5, [pc, #52]	; (8001118 <__libc_init_array+0x38>)
 80010e4:	4c0d      	ldr	r4, [pc, #52]	; (800111c <__libc_init_array+0x3c>)
 80010e6:	1b64      	subs	r4, r4, r5
 80010e8:	10a4      	asrs	r4, r4, #2
 80010ea:	2600      	movs	r6, #0
 80010ec:	42a6      	cmp	r6, r4
 80010ee:	d109      	bne.n	8001104 <__libc_init_array+0x24>
 80010f0:	4d0b      	ldr	r5, [pc, #44]	; (8001120 <__libc_init_array+0x40>)
 80010f2:	4c0c      	ldr	r4, [pc, #48]	; (8001124 <__libc_init_array+0x44>)
 80010f4:	f000 fa92 	bl	800161c <_init>
 80010f8:	1b64      	subs	r4, r4, r5
 80010fa:	10a4      	asrs	r4, r4, #2
 80010fc:	2600      	movs	r6, #0
 80010fe:	42a6      	cmp	r6, r4
 8001100:	d105      	bne.n	800110e <__libc_init_array+0x2e>
 8001102:	bd70      	pop	{r4, r5, r6, pc}
 8001104:	f855 3b04 	ldr.w	r3, [r5], #4
 8001108:	4798      	blx	r3
 800110a:	3601      	adds	r6, #1
 800110c:	e7ee      	b.n	80010ec <__libc_init_array+0xc>
 800110e:	f855 3b04 	ldr.w	r3, [r5], #4
 8001112:	4798      	blx	r3
 8001114:	3601      	adds	r6, #1
 8001116:	e7f2      	b.n	80010fe <__libc_init_array+0x1e>
 8001118:	080016a8 	.word	0x080016a8
 800111c:	080016a8 	.word	0x080016a8
 8001120:	080016a8 	.word	0x080016a8
 8001124:	080016ac 	.word	0x080016ac

08001128 <atan2>:
 8001128:	f000 b802 	b.w	8001130 <__ieee754_atan2>
 800112c:	0000      	movs	r0, r0
	...

08001130 <__ieee754_atan2>:
 8001130:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001134:	ec57 6b11 	vmov	r6, r7, d1
 8001138:	4273      	negs	r3, r6
 800113a:	f8df e184 	ldr.w	lr, [pc, #388]	; 80012c0 <__ieee754_atan2+0x190>
 800113e:	f027 4200 	bic.w	r2, r7, #2147483648	; 0x80000000
 8001142:	4333      	orrs	r3, r6
 8001144:	ea42 73d3 	orr.w	r3, r2, r3, lsr #31
 8001148:	4573      	cmp	r3, lr
 800114a:	ec51 0b10 	vmov	r0, r1, d0
 800114e:	ee11 8a10 	vmov	r8, s2
 8001152:	d80a      	bhi.n	800116a <__ieee754_atan2+0x3a>
 8001154:	4244      	negs	r4, r0
 8001156:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 800115a:	4304      	orrs	r4, r0
 800115c:	ea43 74d4 	orr.w	r4, r3, r4, lsr #31
 8001160:	4574      	cmp	r4, lr
 8001162:	ee10 9a10 	vmov	r9, s0
 8001166:	468c      	mov	ip, r1
 8001168:	d907      	bls.n	800117a <__ieee754_atan2+0x4a>
 800116a:	4632      	mov	r2, r6
 800116c:	463b      	mov	r3, r7
 800116e:	f7ff f839 	bl	80001e4 <__adddf3>
 8001172:	ec41 0b10 	vmov	d0, r0, r1
 8001176:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800117a:	f107 4440 	add.w	r4, r7, #3221225472	; 0xc0000000
 800117e:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8001182:	4334      	orrs	r4, r6
 8001184:	d103      	bne.n	800118e <__ieee754_atan2+0x5e>
 8001186:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800118a:	f000 b89d 	b.w	80012c8 <atan>
 800118e:	17bc      	asrs	r4, r7, #30
 8001190:	f004 0402 	and.w	r4, r4, #2
 8001194:	ea53 0909 	orrs.w	r9, r3, r9
 8001198:	ea44 74d1 	orr.w	r4, r4, r1, lsr #31
 800119c:	d107      	bne.n	80011ae <__ieee754_atan2+0x7e>
 800119e:	2c02      	cmp	r4, #2
 80011a0:	d060      	beq.n	8001264 <__ieee754_atan2+0x134>
 80011a2:	2c03      	cmp	r4, #3
 80011a4:	d1e5      	bne.n	8001172 <__ieee754_atan2+0x42>
 80011a6:	a142      	add	r1, pc, #264	; (adr r1, 80012b0 <__ieee754_atan2+0x180>)
 80011a8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80011ac:	e7e1      	b.n	8001172 <__ieee754_atan2+0x42>
 80011ae:	ea52 0808 	orrs.w	r8, r2, r8
 80011b2:	d106      	bne.n	80011c2 <__ieee754_atan2+0x92>
 80011b4:	f1bc 0f00 	cmp.w	ip, #0
 80011b8:	da5f      	bge.n	800127a <__ieee754_atan2+0x14a>
 80011ba:	a13f      	add	r1, pc, #252	; (adr r1, 80012b8 <__ieee754_atan2+0x188>)
 80011bc:	e9d1 0100 	ldrd	r0, r1, [r1]
 80011c0:	e7d7      	b.n	8001172 <__ieee754_atan2+0x42>
 80011c2:	4572      	cmp	r2, lr
 80011c4:	d10f      	bne.n	80011e6 <__ieee754_atan2+0xb6>
 80011c6:	4293      	cmp	r3, r2
 80011c8:	f104 34ff 	add.w	r4, r4, #4294967295
 80011cc:	d107      	bne.n	80011de <__ieee754_atan2+0xae>
 80011ce:	2c02      	cmp	r4, #2
 80011d0:	d84c      	bhi.n	800126c <__ieee754_atan2+0x13c>
 80011d2:	4b35      	ldr	r3, [pc, #212]	; (80012a8 <__ieee754_atan2+0x178>)
 80011d4:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 80011d8:	e9d4 0100 	ldrd	r0, r1, [r4]
 80011dc:	e7c9      	b.n	8001172 <__ieee754_atan2+0x42>
 80011de:	2c02      	cmp	r4, #2
 80011e0:	d848      	bhi.n	8001274 <__ieee754_atan2+0x144>
 80011e2:	4b32      	ldr	r3, [pc, #200]	; (80012ac <__ieee754_atan2+0x17c>)
 80011e4:	e7f6      	b.n	80011d4 <__ieee754_atan2+0xa4>
 80011e6:	4573      	cmp	r3, lr
 80011e8:	d0e4      	beq.n	80011b4 <__ieee754_atan2+0x84>
 80011ea:	1a9b      	subs	r3, r3, r2
 80011ec:	f1b3 7f74 	cmp.w	r3, #63963136	; 0x3d00000
 80011f0:	ea4f 5223 	mov.w	r2, r3, asr #20
 80011f4:	da1e      	bge.n	8001234 <__ieee754_atan2+0x104>
 80011f6:	2f00      	cmp	r7, #0
 80011f8:	da01      	bge.n	80011fe <__ieee754_atan2+0xce>
 80011fa:	323c      	adds	r2, #60	; 0x3c
 80011fc:	db1e      	blt.n	800123c <__ieee754_atan2+0x10c>
 80011fe:	4632      	mov	r2, r6
 8001200:	463b      	mov	r3, r7
 8001202:	f7ff facf 	bl	80007a4 <__aeabi_ddiv>
 8001206:	ec41 0b10 	vmov	d0, r0, r1
 800120a:	f000 f9fd 	bl	8001608 <fabs>
 800120e:	f000 f85b 	bl	80012c8 <atan>
 8001212:	ec51 0b10 	vmov	r0, r1, d0
 8001216:	2c01      	cmp	r4, #1
 8001218:	d013      	beq.n	8001242 <__ieee754_atan2+0x112>
 800121a:	2c02      	cmp	r4, #2
 800121c:	d015      	beq.n	800124a <__ieee754_atan2+0x11a>
 800121e:	2c00      	cmp	r4, #0
 8001220:	d0a7      	beq.n	8001172 <__ieee754_atan2+0x42>
 8001222:	a319      	add	r3, pc, #100	; (adr r3, 8001288 <__ieee754_atan2+0x158>)
 8001224:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001228:	f7fe ffda 	bl	80001e0 <__aeabi_dsub>
 800122c:	a318      	add	r3, pc, #96	; (adr r3, 8001290 <__ieee754_atan2+0x160>)
 800122e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001232:	e014      	b.n	800125e <__ieee754_atan2+0x12e>
 8001234:	a118      	add	r1, pc, #96	; (adr r1, 8001298 <__ieee754_atan2+0x168>)
 8001236:	e9d1 0100 	ldrd	r0, r1, [r1]
 800123a:	e7ec      	b.n	8001216 <__ieee754_atan2+0xe6>
 800123c:	2000      	movs	r0, #0
 800123e:	2100      	movs	r1, #0
 8001240:	e7e9      	b.n	8001216 <__ieee754_atan2+0xe6>
 8001242:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8001246:	4619      	mov	r1, r3
 8001248:	e793      	b.n	8001172 <__ieee754_atan2+0x42>
 800124a:	a30f      	add	r3, pc, #60	; (adr r3, 8001288 <__ieee754_atan2+0x158>)
 800124c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001250:	f7fe ffc6 	bl	80001e0 <__aeabi_dsub>
 8001254:	4602      	mov	r2, r0
 8001256:	460b      	mov	r3, r1
 8001258:	a10d      	add	r1, pc, #52	; (adr r1, 8001290 <__ieee754_atan2+0x160>)
 800125a:	e9d1 0100 	ldrd	r0, r1, [r1]
 800125e:	f7fe ffbf 	bl	80001e0 <__aeabi_dsub>
 8001262:	e786      	b.n	8001172 <__ieee754_atan2+0x42>
 8001264:	a10a      	add	r1, pc, #40	; (adr r1, 8001290 <__ieee754_atan2+0x160>)
 8001266:	e9d1 0100 	ldrd	r0, r1, [r1]
 800126a:	e782      	b.n	8001172 <__ieee754_atan2+0x42>
 800126c:	a10c      	add	r1, pc, #48	; (adr r1, 80012a0 <__ieee754_atan2+0x170>)
 800126e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001272:	e77e      	b.n	8001172 <__ieee754_atan2+0x42>
 8001274:	2000      	movs	r0, #0
 8001276:	2100      	movs	r1, #0
 8001278:	e77b      	b.n	8001172 <__ieee754_atan2+0x42>
 800127a:	a107      	add	r1, pc, #28	; (adr r1, 8001298 <__ieee754_atan2+0x168>)
 800127c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001280:	e777      	b.n	8001172 <__ieee754_atan2+0x42>
 8001282:	bf00      	nop
 8001284:	f3af 8000 	nop.w
 8001288:	33145c07 	.word	0x33145c07
 800128c:	3ca1a626 	.word	0x3ca1a626
 8001290:	54442d18 	.word	0x54442d18
 8001294:	400921fb 	.word	0x400921fb
 8001298:	54442d18 	.word	0x54442d18
 800129c:	3ff921fb 	.word	0x3ff921fb
 80012a0:	54442d18 	.word	0x54442d18
 80012a4:	3fe921fb 	.word	0x3fe921fb
 80012a8:	08001638 	.word	0x08001638
 80012ac:	08001650 	.word	0x08001650
 80012b0:	54442d18 	.word	0x54442d18
 80012b4:	c00921fb 	.word	0xc00921fb
 80012b8:	54442d18 	.word	0x54442d18
 80012bc:	bff921fb 	.word	0xbff921fb
 80012c0:	7ff00000 	.word	0x7ff00000
 80012c4:	00000000 	.word	0x00000000

080012c8 <atan>:
 80012c8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80012cc:	ec55 4b10 	vmov	r4, r5, d0
 80012d0:	4bc3      	ldr	r3, [pc, #780]	; (80015e0 <atan+0x318>)
 80012d2:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 80012d6:	429e      	cmp	r6, r3
 80012d8:	46ab      	mov	fp, r5
 80012da:	dd18      	ble.n	800130e <atan+0x46>
 80012dc:	4bc1      	ldr	r3, [pc, #772]	; (80015e4 <atan+0x31c>)
 80012de:	429e      	cmp	r6, r3
 80012e0:	dc01      	bgt.n	80012e6 <atan+0x1e>
 80012e2:	d109      	bne.n	80012f8 <atan+0x30>
 80012e4:	b144      	cbz	r4, 80012f8 <atan+0x30>
 80012e6:	4622      	mov	r2, r4
 80012e8:	462b      	mov	r3, r5
 80012ea:	4620      	mov	r0, r4
 80012ec:	4629      	mov	r1, r5
 80012ee:	f7fe ff79 	bl	80001e4 <__adddf3>
 80012f2:	4604      	mov	r4, r0
 80012f4:	460d      	mov	r5, r1
 80012f6:	e006      	b.n	8001306 <atan+0x3e>
 80012f8:	f1bb 0f00 	cmp.w	fp, #0
 80012fc:	f300 8131 	bgt.w	8001562 <atan+0x29a>
 8001300:	a59b      	add	r5, pc, #620	; (adr r5, 8001570 <atan+0x2a8>)
 8001302:	e9d5 4500 	ldrd	r4, r5, [r5]
 8001306:	ec45 4b10 	vmov	d0, r4, r5
 800130a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800130e:	4bb6      	ldr	r3, [pc, #728]	; (80015e8 <atan+0x320>)
 8001310:	429e      	cmp	r6, r3
 8001312:	dc14      	bgt.n	800133e <atan+0x76>
 8001314:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
 8001318:	429e      	cmp	r6, r3
 800131a:	dc0d      	bgt.n	8001338 <atan+0x70>
 800131c:	a396      	add	r3, pc, #600	; (adr r3, 8001578 <atan+0x2b0>)
 800131e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001322:	ee10 0a10 	vmov	r0, s0
 8001326:	4629      	mov	r1, r5
 8001328:	f7fe ff5c 	bl	80001e4 <__adddf3>
 800132c:	4baf      	ldr	r3, [pc, #700]	; (80015ec <atan+0x324>)
 800132e:	2200      	movs	r2, #0
 8001330:	f7ff fb9e 	bl	8000a70 <__aeabi_dcmpgt>
 8001334:	2800      	cmp	r0, #0
 8001336:	d1e6      	bne.n	8001306 <atan+0x3e>
 8001338:	f04f 3aff 	mov.w	sl, #4294967295
 800133c:	e02b      	b.n	8001396 <atan+0xce>
 800133e:	f000 f963 	bl	8001608 <fabs>
 8001342:	4bab      	ldr	r3, [pc, #684]	; (80015f0 <atan+0x328>)
 8001344:	429e      	cmp	r6, r3
 8001346:	ec55 4b10 	vmov	r4, r5, d0
 800134a:	f300 80bf 	bgt.w	80014cc <atan+0x204>
 800134e:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
 8001352:	429e      	cmp	r6, r3
 8001354:	f300 80a0 	bgt.w	8001498 <atan+0x1d0>
 8001358:	ee10 2a10 	vmov	r2, s0
 800135c:	ee10 0a10 	vmov	r0, s0
 8001360:	462b      	mov	r3, r5
 8001362:	4629      	mov	r1, r5
 8001364:	f7fe ff3e 	bl	80001e4 <__adddf3>
 8001368:	4ba0      	ldr	r3, [pc, #640]	; (80015ec <atan+0x324>)
 800136a:	2200      	movs	r2, #0
 800136c:	f7fe ff38 	bl	80001e0 <__aeabi_dsub>
 8001370:	2200      	movs	r2, #0
 8001372:	4606      	mov	r6, r0
 8001374:	460f      	mov	r7, r1
 8001376:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800137a:	4620      	mov	r0, r4
 800137c:	4629      	mov	r1, r5
 800137e:	f7fe ff31 	bl	80001e4 <__adddf3>
 8001382:	4602      	mov	r2, r0
 8001384:	460b      	mov	r3, r1
 8001386:	4630      	mov	r0, r6
 8001388:	4639      	mov	r1, r7
 800138a:	f7ff fa0b 	bl	80007a4 <__aeabi_ddiv>
 800138e:	f04f 0a00 	mov.w	sl, #0
 8001392:	4604      	mov	r4, r0
 8001394:	460d      	mov	r5, r1
 8001396:	4622      	mov	r2, r4
 8001398:	462b      	mov	r3, r5
 800139a:	4620      	mov	r0, r4
 800139c:	4629      	mov	r1, r5
 800139e:	f7ff f8d7 	bl	8000550 <__aeabi_dmul>
 80013a2:	4602      	mov	r2, r0
 80013a4:	460b      	mov	r3, r1
 80013a6:	4680      	mov	r8, r0
 80013a8:	4689      	mov	r9, r1
 80013aa:	f7ff f8d1 	bl	8000550 <__aeabi_dmul>
 80013ae:	a374      	add	r3, pc, #464	; (adr r3, 8001580 <atan+0x2b8>)
 80013b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013b4:	4606      	mov	r6, r0
 80013b6:	460f      	mov	r7, r1
 80013b8:	f7ff f8ca 	bl	8000550 <__aeabi_dmul>
 80013bc:	a372      	add	r3, pc, #456	; (adr r3, 8001588 <atan+0x2c0>)
 80013be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013c2:	f7fe ff0f 	bl	80001e4 <__adddf3>
 80013c6:	4632      	mov	r2, r6
 80013c8:	463b      	mov	r3, r7
 80013ca:	f7ff f8c1 	bl	8000550 <__aeabi_dmul>
 80013ce:	a370      	add	r3, pc, #448	; (adr r3, 8001590 <atan+0x2c8>)
 80013d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013d4:	f7fe ff06 	bl	80001e4 <__adddf3>
 80013d8:	4632      	mov	r2, r6
 80013da:	463b      	mov	r3, r7
 80013dc:	f7ff f8b8 	bl	8000550 <__aeabi_dmul>
 80013e0:	a36d      	add	r3, pc, #436	; (adr r3, 8001598 <atan+0x2d0>)
 80013e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013e6:	f7fe fefd 	bl	80001e4 <__adddf3>
 80013ea:	4632      	mov	r2, r6
 80013ec:	463b      	mov	r3, r7
 80013ee:	f7ff f8af 	bl	8000550 <__aeabi_dmul>
 80013f2:	a36b      	add	r3, pc, #428	; (adr r3, 80015a0 <atan+0x2d8>)
 80013f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013f8:	f7fe fef4 	bl	80001e4 <__adddf3>
 80013fc:	4632      	mov	r2, r6
 80013fe:	463b      	mov	r3, r7
 8001400:	f7ff f8a6 	bl	8000550 <__aeabi_dmul>
 8001404:	a368      	add	r3, pc, #416	; (adr r3, 80015a8 <atan+0x2e0>)
 8001406:	e9d3 2300 	ldrd	r2, r3, [r3]
 800140a:	f7fe feeb 	bl	80001e4 <__adddf3>
 800140e:	4642      	mov	r2, r8
 8001410:	464b      	mov	r3, r9
 8001412:	f7ff f89d 	bl	8000550 <__aeabi_dmul>
 8001416:	a366      	add	r3, pc, #408	; (adr r3, 80015b0 <atan+0x2e8>)
 8001418:	e9d3 2300 	ldrd	r2, r3, [r3]
 800141c:	4680      	mov	r8, r0
 800141e:	4689      	mov	r9, r1
 8001420:	4630      	mov	r0, r6
 8001422:	4639      	mov	r1, r7
 8001424:	f7ff f894 	bl	8000550 <__aeabi_dmul>
 8001428:	a363      	add	r3, pc, #396	; (adr r3, 80015b8 <atan+0x2f0>)
 800142a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800142e:	f7fe fed7 	bl	80001e0 <__aeabi_dsub>
 8001432:	4632      	mov	r2, r6
 8001434:	463b      	mov	r3, r7
 8001436:	f7ff f88b 	bl	8000550 <__aeabi_dmul>
 800143a:	a361      	add	r3, pc, #388	; (adr r3, 80015c0 <atan+0x2f8>)
 800143c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001440:	f7fe fece 	bl	80001e0 <__aeabi_dsub>
 8001444:	4632      	mov	r2, r6
 8001446:	463b      	mov	r3, r7
 8001448:	f7ff f882 	bl	8000550 <__aeabi_dmul>
 800144c:	a35e      	add	r3, pc, #376	; (adr r3, 80015c8 <atan+0x300>)
 800144e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001452:	f7fe fec5 	bl	80001e0 <__aeabi_dsub>
 8001456:	4632      	mov	r2, r6
 8001458:	463b      	mov	r3, r7
 800145a:	f7ff f879 	bl	8000550 <__aeabi_dmul>
 800145e:	a35c      	add	r3, pc, #368	; (adr r3, 80015d0 <atan+0x308>)
 8001460:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001464:	f7fe febc 	bl	80001e0 <__aeabi_dsub>
 8001468:	4632      	mov	r2, r6
 800146a:	463b      	mov	r3, r7
 800146c:	f7ff f870 	bl	8000550 <__aeabi_dmul>
 8001470:	4602      	mov	r2, r0
 8001472:	460b      	mov	r3, r1
 8001474:	4640      	mov	r0, r8
 8001476:	4649      	mov	r1, r9
 8001478:	f7fe feb4 	bl	80001e4 <__adddf3>
 800147c:	4622      	mov	r2, r4
 800147e:	462b      	mov	r3, r5
 8001480:	f7ff f866 	bl	8000550 <__aeabi_dmul>
 8001484:	f1ba 3fff 	cmp.w	sl, #4294967295
 8001488:	4602      	mov	r2, r0
 800148a:	460b      	mov	r3, r1
 800148c:	d14b      	bne.n	8001526 <atan+0x25e>
 800148e:	4620      	mov	r0, r4
 8001490:	4629      	mov	r1, r5
 8001492:	f7fe fea5 	bl	80001e0 <__aeabi_dsub>
 8001496:	e72c      	b.n	80012f2 <atan+0x2a>
 8001498:	ee10 0a10 	vmov	r0, s0
 800149c:	4b53      	ldr	r3, [pc, #332]	; (80015ec <atan+0x324>)
 800149e:	2200      	movs	r2, #0
 80014a0:	4629      	mov	r1, r5
 80014a2:	f7fe fe9d 	bl	80001e0 <__aeabi_dsub>
 80014a6:	4b51      	ldr	r3, [pc, #324]	; (80015ec <atan+0x324>)
 80014a8:	4606      	mov	r6, r0
 80014aa:	460f      	mov	r7, r1
 80014ac:	2200      	movs	r2, #0
 80014ae:	4620      	mov	r0, r4
 80014b0:	4629      	mov	r1, r5
 80014b2:	f7fe fe97 	bl	80001e4 <__adddf3>
 80014b6:	4602      	mov	r2, r0
 80014b8:	460b      	mov	r3, r1
 80014ba:	4630      	mov	r0, r6
 80014bc:	4639      	mov	r1, r7
 80014be:	f7ff f971 	bl	80007a4 <__aeabi_ddiv>
 80014c2:	f04f 0a01 	mov.w	sl, #1
 80014c6:	4604      	mov	r4, r0
 80014c8:	460d      	mov	r5, r1
 80014ca:	e764      	b.n	8001396 <atan+0xce>
 80014cc:	4b49      	ldr	r3, [pc, #292]	; (80015f4 <atan+0x32c>)
 80014ce:	429e      	cmp	r6, r3
 80014d0:	da1d      	bge.n	800150e <atan+0x246>
 80014d2:	ee10 0a10 	vmov	r0, s0
 80014d6:	4b48      	ldr	r3, [pc, #288]	; (80015f8 <atan+0x330>)
 80014d8:	2200      	movs	r2, #0
 80014da:	4629      	mov	r1, r5
 80014dc:	f7fe fe80 	bl	80001e0 <__aeabi_dsub>
 80014e0:	4b45      	ldr	r3, [pc, #276]	; (80015f8 <atan+0x330>)
 80014e2:	4606      	mov	r6, r0
 80014e4:	460f      	mov	r7, r1
 80014e6:	2200      	movs	r2, #0
 80014e8:	4620      	mov	r0, r4
 80014ea:	4629      	mov	r1, r5
 80014ec:	f7ff f830 	bl	8000550 <__aeabi_dmul>
 80014f0:	4b3e      	ldr	r3, [pc, #248]	; (80015ec <atan+0x324>)
 80014f2:	2200      	movs	r2, #0
 80014f4:	f7fe fe76 	bl	80001e4 <__adddf3>
 80014f8:	4602      	mov	r2, r0
 80014fa:	460b      	mov	r3, r1
 80014fc:	4630      	mov	r0, r6
 80014fe:	4639      	mov	r1, r7
 8001500:	f7ff f950 	bl	80007a4 <__aeabi_ddiv>
 8001504:	f04f 0a02 	mov.w	sl, #2
 8001508:	4604      	mov	r4, r0
 800150a:	460d      	mov	r5, r1
 800150c:	e743      	b.n	8001396 <atan+0xce>
 800150e:	462b      	mov	r3, r5
 8001510:	ee10 2a10 	vmov	r2, s0
 8001514:	4939      	ldr	r1, [pc, #228]	; (80015fc <atan+0x334>)
 8001516:	2000      	movs	r0, #0
 8001518:	f7ff f944 	bl	80007a4 <__aeabi_ddiv>
 800151c:	f04f 0a03 	mov.w	sl, #3
 8001520:	4604      	mov	r4, r0
 8001522:	460d      	mov	r5, r1
 8001524:	e737      	b.n	8001396 <atan+0xce>
 8001526:	4b36      	ldr	r3, [pc, #216]	; (8001600 <atan+0x338>)
 8001528:	4e36      	ldr	r6, [pc, #216]	; (8001604 <atan+0x33c>)
 800152a:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 800152e:	eb03 0aca 	add.w	sl, r3, sl, lsl #3
 8001532:	e9da 2300 	ldrd	r2, r3, [sl]
 8001536:	f7fe fe53 	bl	80001e0 <__aeabi_dsub>
 800153a:	4622      	mov	r2, r4
 800153c:	462b      	mov	r3, r5
 800153e:	f7fe fe4f 	bl	80001e0 <__aeabi_dsub>
 8001542:	4602      	mov	r2, r0
 8001544:	460b      	mov	r3, r1
 8001546:	e9d6 0100 	ldrd	r0, r1, [r6]
 800154a:	f7fe fe49 	bl	80001e0 <__aeabi_dsub>
 800154e:	f1bb 0f00 	cmp.w	fp, #0
 8001552:	4604      	mov	r4, r0
 8001554:	460d      	mov	r5, r1
 8001556:	f6bf aed6 	bge.w	8001306 <atan+0x3e>
 800155a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800155e:	461d      	mov	r5, r3
 8001560:	e6d1      	b.n	8001306 <atan+0x3e>
 8001562:	a51d      	add	r5, pc, #116	; (adr r5, 80015d8 <atan+0x310>)
 8001564:	e9d5 4500 	ldrd	r4, r5, [r5]
 8001568:	e6cd      	b.n	8001306 <atan+0x3e>
 800156a:	bf00      	nop
 800156c:	f3af 8000 	nop.w
 8001570:	54442d18 	.word	0x54442d18
 8001574:	bff921fb 	.word	0xbff921fb
 8001578:	8800759c 	.word	0x8800759c
 800157c:	7e37e43c 	.word	0x7e37e43c
 8001580:	e322da11 	.word	0xe322da11
 8001584:	3f90ad3a 	.word	0x3f90ad3a
 8001588:	24760deb 	.word	0x24760deb
 800158c:	3fa97b4b 	.word	0x3fa97b4b
 8001590:	a0d03d51 	.word	0xa0d03d51
 8001594:	3fb10d66 	.word	0x3fb10d66
 8001598:	c54c206e 	.word	0xc54c206e
 800159c:	3fb745cd 	.word	0x3fb745cd
 80015a0:	920083ff 	.word	0x920083ff
 80015a4:	3fc24924 	.word	0x3fc24924
 80015a8:	5555550d 	.word	0x5555550d
 80015ac:	3fd55555 	.word	0x3fd55555
 80015b0:	2c6a6c2f 	.word	0x2c6a6c2f
 80015b4:	bfa2b444 	.word	0xbfa2b444
 80015b8:	52defd9a 	.word	0x52defd9a
 80015bc:	3fadde2d 	.word	0x3fadde2d
 80015c0:	af749a6d 	.word	0xaf749a6d
 80015c4:	3fb3b0f2 	.word	0x3fb3b0f2
 80015c8:	fe231671 	.word	0xfe231671
 80015cc:	3fbc71c6 	.word	0x3fbc71c6
 80015d0:	9998ebc4 	.word	0x9998ebc4
 80015d4:	3fc99999 	.word	0x3fc99999
 80015d8:	54442d18 	.word	0x54442d18
 80015dc:	3ff921fb 	.word	0x3ff921fb
 80015e0:	440fffff 	.word	0x440fffff
 80015e4:	7ff00000 	.word	0x7ff00000
 80015e8:	3fdbffff 	.word	0x3fdbffff
 80015ec:	3ff00000 	.word	0x3ff00000
 80015f0:	3ff2ffff 	.word	0x3ff2ffff
 80015f4:	40038000 	.word	0x40038000
 80015f8:	3ff80000 	.word	0x3ff80000
 80015fc:	bff00000 	.word	0xbff00000
 8001600:	08001688 	.word	0x08001688
 8001604:	08001668 	.word	0x08001668

08001608 <fabs>:
 8001608:	ec51 0b10 	vmov	r0, r1, d0
 800160c:	ee10 2a10 	vmov	r2, s0
 8001610:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8001614:	ec43 2b10 	vmov	d0, r2, r3
 8001618:	4770      	bx	lr
	...

0800161c <_init>:
 800161c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800161e:	bf00      	nop
 8001620:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001622:	bc08      	pop	{r3}
 8001624:	469e      	mov	lr, r3
 8001626:	4770      	bx	lr

08001628 <_fini>:
 8001628:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800162a:	bf00      	nop
 800162c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800162e:	bc08      	pop	{r3}
 8001630:	469e      	mov	lr, r3
 8001632:	4770      	bx	lr
